<?xml version="1.0"?>
<SolidWorksNameSpace xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>SolidWorks.Interop.swpublished</Name>
  <Version>2018</Version>
  <IsObsolete>false</IsObsolete>
  <Description>SOLIDWORKS custom interfaces API</Description>
  <InterfaceModels>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by</Description>
      <Remark />
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~AfterClose.html"&gt;IPropertyManagerPage2Handler5::AfterClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnActiveXControlCreated.html"&gt;IPropertyManagerPage2Handler5::OnActiveXControlCreated&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnButtonPress.html"&gt;IPropertyManagerPage2Handler5::OnButtonPress&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnCheckboxCheck.html"&gt;IPropertyManagerPage2Handler5::OnCheckboxCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnClose.html"&gt;IPropertyManagerPage2Handler5::OnClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboboxEditChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupCheck.html"&gt;IPropertyManagerPage2Handler5::OnGroupCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupExpand.html"&gt;IPropertyManagerPage2Handler5::OnGroupExpand&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnHelp.html"&gt;IPropertyManagerPage2Handler5::OnHelp&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnListboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnListboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNextPage.html"&gt;IPropertyManagerPage2Handler5::OnNextPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnNumberboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnOptionCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnPreviousPage.html"&gt;IPropertyManagerPage2Handler5::OnPreviousPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutCreated.html"&gt;IPropertyManagerPage2Handler5::OnSelectionboxCalloutCreated&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutDestroyed.html"&gt;IPropertyManagerPage2Handler5::OnSelectionboxCalloutDestroyed&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionFocusChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxListChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionListChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler2~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnTextboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnTextboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by</Description>
      <Remark />
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~AfterClose.html"&gt;IPropertyManagerPage2Handler5::AfterClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnActiveXControlCreated.html"&gt;IPropertyManagerPage2Handler5::OnActiveXControlCreated&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnButtonPress.html"&gt;IPropertyManagerPage2Handler5::OnButtonPress&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnCheckboxCheck.html"&gt;IPropertyManagerPage2Handler5::OnCheckboxCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnClose.html"&gt;IPropertyManagerPage2Handler5::OnClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboboxEditChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupCheck.html"&gt;IPropertyManagerPage2Handler5::OnGroupCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupExpand.html"&gt;IPropertyManagerPage2Handler5::OnGroupExpand&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription>  </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnHelp.html"&gt;IPropertyManagerPage2Handler5::OnHelp&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnListboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnListboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNextPage.html"&gt;IPropertyManagerPage2Handler5::OnNextPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnNumberboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnOptionCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnPreview</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnPreview.html"&gt;IPropertyManagerPage2Handler5::OnPreview&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnPreviousPage.html"&gt;IPropertyManagerPage2Handler5::OnPreviousPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutCreated.html"&gt;IPropertyManagerPage2Handler5::OnSelectionboxCalloutCreated&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutDestroyed.html"&gt;IPropertyManagerPage2Handler5::OnSelectionboxCalloutDestroyed&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionFocusChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxListChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionListChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnSliderPositionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler5::OnSliderPositionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnSubmitSelection</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSubmitSelection.html"&gt;IPropertyManagerPage2Handler5::OnSubmitSelection&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Selection</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelType</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnTabClicked</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnTabClicked.html"&gt;IPropertyManagerPage2Handler5::OnTabClicked&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnTextboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnTextboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler3~OnWhatsNew</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnWhatsNew.html"&gt;IPropertyManagerPage2Handler5::OnWhatsNew&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5.html"&gt;IPropertyManagerPage2Handler5&lt;/a&gt;.</Description>
      <Remark />
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~AfterClose.html"&gt;IPropertyManagerPage2Handler5::AfterClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnActiveXControlCreated.html"&gt;IPropertyManagerPage2Handler5::OnActiveXControlCreated&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnButtonPress.html"&gt;IPropertyManagerPage2Handler5::OnButtonPress&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnCheckboxCheck.html"&gt;IPropertyManagerPage2Handler5::OnCheckboxCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnClose.html"&gt;IPropertyManagerPage2Handler5::OnClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboboxEditChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupCheck.html"&gt;IPropertyManagerPage2Handler5::OnGroupCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupExpand.html"&gt;IPropertyManagerPage2Handler5::OnGroupExpand&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription>  </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnHelp.html"&gt;IPropertyManagerPage2Handler5::OnHelp&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnKeystroke</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnKeystroke.html"&gt;IPropertyManagerPage2Handler5::OnKeystroke&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Wparam</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Message</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Lparam</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnListboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnListboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>  </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNextPage.html"&gt;IPropertyManagerPage2Handler5::OnNextPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnNumberboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnOptionCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnPopupMenuItem</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnPopupMenuItem.html"&gt;IPropertyManagerPage2Handler5::OnPopupMenuItem&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>  </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnPopupMenuItemUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnPopupMenuItemUpdate.html"&gt;IPropertyManagerPage2Handler5::OnPopupMenuItemUpdate&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>retval</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnPreview</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnPreview.html"&gt;IPropertyManagerPage2Handler5::OnPreview&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnPreviousPage.html"&gt;IPropertyManagerPage2Handler5::OnPreviousPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutCreated.html"&gt;IPropertyManagerPage2Handler5::OnSelectionboxCalloutCreated&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutDestroyed.html"&gt;IPropertyManagerPage2Handler5::OnSelectionboxCalloutDestroyed&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionFocusChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxListChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionListChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnSliderPositionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler5::OnSliderPositionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnSliderTrackingCompleted</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderTrackingCompleted.html"&gt;IPropertyManagerPage2Handler5::OnSliderTrackingCompleted&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnSubmitSelection</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSubmitSelection.html"&gt;IPropertyManagerPage2Handler5::OnSubmitSelection&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Selection</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelType</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnTabClicked</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnTabClicked.html"&gt;IPropertyManagerPage2Handler5::OnTabClicked&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnTextboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnTextboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnUndo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnUndo.html"&gt;IPropertyManagerPage2Handler5::OnUndo&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler4~OnWhatsNew</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnWhatsNew.html"&gt;IPropertyManagerPage2Handler5::OnWhatsNew&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6.html"&gt;IPropertyManagerPage2Handler6&lt;/a&gt;.</Description>
      <Remark>To use this interface in a VBA macro, you must reference the &lt;span style="FONT-WEIGHT: bold"&gt;SOLIDWORKS exposed type libraries for add-in use&lt;/span&gt; type library specific to the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~VersionHistory.html"&gt;version of SOLIDWORKS&lt;/a&gt; that you are running. 
&lt;p class="apiRemarksText"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText"&gt;For all unimplemented methods of this object, the add-in application can return E_NOTIMPL.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~AfterActivation</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by&lt;font color="#000000"&gt; &lt;/font&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~AfterActivation.html"&gt;IPropertyManagerPage2Handler6::AfterActivation&lt;/a&gt;&lt;font color="#ff0000"&gt;.&lt;/font&gt;</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~AfterClose.html"&gt;IPropertyManagerPage2Handler6::AfterClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnActiveXControlCreated.html"&gt;IPropertyManagerPage2Handler6::OnActiveXControlCreated&lt;/a&gt;.</Description>
          <Remark>&lt;p style="MARGIN-BOTTOM: 0px"&gt;When the ActiveX control is created, the program creating the PropertyManager page should receive notification from this handler. Specify one of the available enumerators for this handler's retval argument:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Cancel. Continue creating the PropertyManager page without the ActiveX control. This is the default.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Retry. Try to create the ActiveX control again. You can reuse the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~SetClass.html"&gt;IPropertyManagerPageActiveX::SetClass&lt;/a&gt; method to change the control ID or the license key to perhaps use another similar control or another version of the control, and then specify swHandleActiveXCreationFailure_Retry. Avoid an endless loop situation.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Continue. Cancel creating PropertyManager page. For example, it might be that the PropertyManager page is useless without the control, so the calling add-in might want to quit and handle the situation on its own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;For example, if the control is created successfully, then SOLIDWORKS passes true for Status to the add-in and the return value is ignored. If the control fails to be created, SOLIDWORKS passes false for Status to the add-in and the return value is swHandleActiveXCreationFailure_Continue. &lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;Do not call &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~GetControl.html"&gt;IPropertyManagerPageActiveX::GetControl&lt;/a&gt; to get the interface object for this ActiveX control.&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;You cannot get a reference to the ActiveX control inside this event handler because the page is not &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;displayed when this notification is sent. You can only get the reference to the control after the PropertyManager page is displayed. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this ActiveX control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription>True if the ActiveX control creation was successful, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Action to take if the creation of the ActiveX control failed as defined in swHandleActiveXCreationFailure (see Remarks)</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnButtonPress.html"&gt;IPropertyManagerPage2Handler6::OnButtonPress&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the button</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnCheckboxCheck.html"&gt;IPropertyManagerPage2Handler6::OnCheckboxCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this check box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnClose.html"&gt;IPropertyManagerPage2Handler6::OnClose&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This handler method is called when the PropertyManager page is about to close. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;SOLIDWORKS controls when add-ins can do work. An add-in is unable to do any real work within the PropertyManager2Handler5::OnClose handler because the PropertyManager page and command are closing. So, typically the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~AfterClose.html"&gt;IPropertyPage2Handler5::AfterClose&lt;/a&gt; handler is called after IPropertyManager2Handler5::OnClose to allow an add-in to do work. However:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;&lt;!--(Table)=========================================================--&gt;
&lt;td_null&gt;&lt;/td_null&gt;&lt;table style="BORDER-SPACING: 0px" x-use-null-cells=""&gt;
&lt;colgroup&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 49.57%"&gt;
&lt;/colgroup&gt;&lt;tbody&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;If PropertyManager page is...&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;And you implemented the handler in... &lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;Then you...&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~Pinned.html"&gt;Not pinned&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Can prevent the PropertyManager page from closing by setting the HRESULT return value to S_false.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Should use the Err.Raise method with a value of 1 to prevent the PropertyManager page from closing. In VB.NET, use 0 with Err.Raise.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px" colspan="2"&gt;
&lt;p&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;When control returns to SOLIDWORKS:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManager page remains displayed on the screen.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManagerPage2Handler5::AfterClose handler is not called.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Pinned&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++ or Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="WIDTH: 49.57%" width="49.57%"&gt;
&lt;p&gt;Set HRESULT to S_false to close the PropertyManager page (i.e., ignore the fact that the page is pinned). &lt;/p&gt;
&lt;p&gt;This allows your add-in to call the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~AfterClose.html"&gt;IPropertyManagerPage2Handler5::AfterClose&lt;/a&gt; handler and do its work. To avoid aggravating your user, who expected the PropertyManager page &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;to remain pinned, you should re-display and re-pin the PropertyManager page after the add-in finishes its work.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; In a previous version of this method, &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler3~OnClose.html"&gt;IPropertyManagerPage2Handler3::OnClose&lt;/a&gt;, if the user clicked the Cancel button and the PropertyManager page had a pushpin, then this method returned swPropertyManagerPageClose_Closed. This version of this method returns swPropertyManagerPageClose_Cancel in this scenario.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription>Reason this method is called as defined in swPropertyManagerPageCloseReasons_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler6::OnComboboxEditChanged&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if the combo box was set up as an editable text box. If the combo box is set up to as a static text box, then this method is not called. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboxSelectionChanged&lt;/a&gt; to find out what is in the text box of the combo box. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. The text passed into this method is the up-to-date text.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler6::OnComboboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboxEditChanged&lt;/a&gt; to &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;find out what is in the text box of the combo box.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. To get the current text, use the value of Item that is passed into the method as the argument to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~ItemText.html"&gt;IPropertyManagerPageCombobox::ItemText&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user has edited the text in the text box and then clicks the arrow to show or hide the list box of the combo box, and the text in the text box matches the first character in any of the items in the list, then that item is automatically selected in the list and this method is called, indicating that the selected item has changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Resource ID of the check box in title of the group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box in the title of the group box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnGroupExpand.html"&gt;IPropertyManagerPage2Handler6::OnGroupExpand&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the arrow that open a group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription>True if the group box is opened, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnHelp.html"&gt;IPropertyManagerPage2Handler6::OnHelp&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the Help file opens successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnKeystroke</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnKeystroke.html"&gt;IPropertyManagerPage2Handler6::OnKeystroke&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;After the add-in has finished processing the keystroke, the message continues on and is processed by Windows. Because processing must occur, nothing should be done to destroy the page nor any action performed that could disrupt normal Windows processing while the add-in is handling this keystroke.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To enable this functionality for this PropertyManager page, set the Options argument of &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;to swPropertyManagerOptions_HandleKeystrokes. By default, this style is not enabled because most applications are not interested in processing keystrokes, and it is a potential performance bottleneck if lots of keystrokes are occurring. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Wparam</ParamName>
              <ParamDescription>wparam argument from Windows processing; indicates the keystroke that occurredNOTE: From the standard set of virtual keys from Windows. Refer to the Virtual Key Code information from Microsoft documentation; for example, the Alt key is VK_MENU.</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Message</ParamName>
              <ParamDescription>Message being processed by Windows; one of these values: 


WM_KEYDOWN 0x0100

WM_KEYUP 0x0101

WM_CHAR 0x0102

WM_DEADCHAR 0x0103

WM_SYSKEYDOWN 0x0104

WM_SYSKEYUP 0x0105

WM_SYSCHAR 0x0106

WM_SYSDEADCHAR 0x0107</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Lparam</ParamName>
              <ParamDescription>lparam argument from Windows processing; bitmask containing various pieces of information; dependent on specific message</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that has focus when the keystroke was made; this is the ID specified when the control was created in IPropertyManagerPage2::AddControl or IPropertyManagerPage2::IAddControl or IPropertyManagerPage2::AddGroupBox or IPropertyManagerPage2::IAddGroupBox.</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True indicates that the keystroke has been handled by the add-in and SOLIDWORKS should not continue to try to process it, false indicates that the keystroke has not been handled by the add-in and SOLIDWORKS will continue to try to process it</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnListboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler6::OnListboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the list box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnNextPage.html"&gt;IPropertyManagerPage2Handler6::OnNextPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the next page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler6::OnNumberboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of number box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnOptionCheck.html"&gt;IPropertyManagerPage2Handler6::OnOptionCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of option</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnPopupMenuItem</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnPopupMenuItem.html"&gt;IPropertyManagerPage2Handler6::OnPopupMenuItem&lt;/a&gt;.</Description>
          <Remark>The add-in should then perform the appropriate action.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnPopupMenuItemUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnPopupMenuItemUpdate.html"&gt;IPropertyManagerPage2Handler6::OnPopupMenuItemUpdate.&lt;/a&gt;</Description>
          <Remark>&lt;p&gt;Thus, this method: &lt;/p&gt;
&lt;ul style="MARGIN-RIGHT: 0px" dir="ltr"&gt;
&lt;li&gt;Processes a request for the state of the specified pop-up menu item associated with the PropertyManager page. 
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiDescriptionText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Passes the state back to SOLIDWORKS.&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem)</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>retval</ParamName>
              <ParamDescription>State of the specified unique user-defined pop-up menu item: 

0 - Not selected (i.e., not checked) and disabled (i.e., grayed out) 

1 - Not selected and enabled

2 - Selected (i.e., checked) and disabled 

3 - Selected and enabled</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnPreview</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnPreview.html"&gt;IPropertyManagerPage2Handler6::OnPreview&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To show a Preview button on a PropertyManager page, include swPropertyManagerOptions_PreviewButton in the Options argument of &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can do whatever you want in response to the Preview button being clicked. Your add-in is responsible for preview handling, including keeping track of the state of the Preview button. Your add-in controls what happens when the Preview button is clicked; SOLIDWORKS takes not action when the Preview button is clicked. SOLIDWORKS ignores the return value because by the time the callback handler is called, the button has already changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Remarks</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnPreviousPage.html"&gt;IPropertyManagerPage2Handler6::OnPreviousPage&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the previous page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnSelectionboxCalloutCreated.html"&gt;IPropertyManagerPage2Handler6::OnSelectionboxCalloutCreated&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can collect information using this method. For example, you can get the selection type from the last selection. Next, use the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt; property to get the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; object. Then, use the various ICallout properties to control the callout text and display characteristics based on that selection information.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is a pre-notification.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts. &lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;a post-notification. The callout pointed to by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt;&amp;nbsp;no longer exists, so do not make any calls to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; methods.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler6::OnSelectionboxFocusChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the selection box about to receive focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnSelectionboxListChanged.html"&gt;IPropertyManagerPage2Handler6::OnSelectionboxListChanged&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called when your application uses a selection method, such as &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~SelectByID2.html"&gt;IModelDocExtension::SelectByID2&lt;/a&gt;, just as if the selection was made interactively.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor a post-notification. The add-in should not be taking any action that may affect the model or the selection list. The add-in should only be querying information, presumably about the state of selections to set up its own information correctly.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Regardless of how many items the user selects, this method is called only once per interactive box selection. In other words, if the user selects six faces using a box selection, this method is called only once.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription>Number of items in this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderPositionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler6::OnSliderPositionChanged&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler5::OnSliderPositionChanged to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur. &lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderTrackingCompleted.html"&gt;IPropertyManagerPage2Handler5::OnSliderTrackingCompleted&lt;/a&gt; to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderTrackingCompleted</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnSliderTrackingCompleted.html"&gt;IPropertyManagerPage2Handler6::OnSliderTrackingCompleted&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler5::OnSliderTrackingCompleted to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler5::OnSliderPositionChanged&lt;/a&gt; to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnSubmitSelection</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnSubmitSelection.html"&gt;IPropertyManagerPage2Handler6::OnSubmitSelection&lt;/a&gt;.</Description>
          <Remark>&lt;p&gt;If writing a VBA macro, then you must set this method to true for the user to select something. If this method is not set to true, then the user cannot select anything. This method is set to false by default.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called by SOLIDWORKS when an add-in has a PropertyManager page displayed and a selection is made that passes the selection filter criteria set up for a selection list box. The add-in can then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Take the Dispatch pointer and the selection type.&lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;QueryInterface the Dispatch pointer to get the specific interface.&lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Use APIs of that interface to determine if the selection should be allowed or not. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/div&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is accepted, return true, and processing will continue normally.&lt;br&gt;&lt;br&gt;- or -&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is rejected, return false, and SOLIDWORKS will not accept the selection, just as if the selection did not pass the selection filter criteria of the selection list box. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The add-in should not Release() the Dispatch pointer. SOLIDWORKS will Release() the Dispatch pointer upon return from this method.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor post-notification. The add-in should not be taking any action that might affect the model or the selection list. The add-in should only be querying information and then returning True/VARIANT_TRUE or false/VARIANT_FALSE.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;ItemText is returned to SOLIDWORKS and stored on the selected object and can be used by your PropertyManager page selection list boxes for the life of that selection.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the active selection box, where this selection is being made</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Selection</ParamName>
              <ParamDescription>Object being selected</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelType</ParamName>
              <ParamDescription>Entity type of the selection as defined in swSelectType_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>ItemText</ParamName>
              <ParamDescription>Item for selection list box (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnTabClicked</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnTabClicked.html"&gt;IPropertyManagerPage2Handler6::OnTabClicked&lt;/a&gt;.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The value of Id is the ID that was specified when the tab was created by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~AddTab.html"&gt;IPropertyManagerPage2::AddTab&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks a tab, control is passed to the add-in via this method. The add-in is expected to show or hide groups and controls intended to be visible or hidden on that tab. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Your add-in is responsible for showing and hiding the controls on a tab to simulate moving between tabs, making it look like the tab is a container for the controls. However, tabs are not containers for the groups or controls. Tabs are controls that are displayed in a certain way, making them look like control containers. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the tab clicked (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnTextboxChanged.html"&gt;IPropertyManagerPage2Handler6::OnTextboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of text box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnUndo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler5~OnWhatsNew</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnWhatsNew.html"&gt;IPropertyManagerPage2Handler6::OnWhatsNew&lt;/a&gt;.</Description>
          <Remark>&lt;p&gt;Your add-in must implement this method. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks the What's New button on this PropertyManager page, the appropriate What's New Help topic is displayed. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ShowHelp.html"&gt;ISldWorks::ShowHelp&lt;/a&gt; to display the What's New Help topic. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7.html"&gt;IPropertyManagerPage2Handler7&lt;/a&gt;.</Description>
      <Remark>&lt;p&gt;To use this interface:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in a SOLIDWORKS VBA macro, you must reference the &lt;span style="FONT-WEIGHT: bold"&gt;SOLIDWORKS exposed type libraries for add-in use&lt;/span&gt; type library specific to the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~VersionHistory.html"&gt;version of SOLIDWORKS&lt;/a&gt; that you are running.&amp;nbsp; 
&lt;/li&gt;&lt;li&gt;in a SOLIDWORKS VB.NET or C# macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C#&amp;nbsp;Macros and Add-ins&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText"&gt;For all unimplemented methods of this object, the add-in application can return E_NOTIMPL.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~AfterActivation</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p style="MARGIN-BOTTOM: 0px"&gt;When the ActiveX control is created, the program creating the PropertyManager page should receive notification from this handler. Specify one of the available enumerators for this handler's return value:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Cancel. Continue creating the PropertyManager page without the ActiveX control. This is the default.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Retry. Try to create the ActiveX control again. You can reuse the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~SetClass.html"&gt;IPropertyManagerPageActiveX::SetClass&lt;/a&gt; method to change the control ID or the license key to perhaps use another similar control or another version of the control, and then specify swHandleActiveXCreationFailure_Retry. Avoid an endless loop situation.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Continue. Cancel creating PropertyManager page. For example, it might be that the PropertyManager page is useless without the control, so the calling add-in might want to quit and handle the situation on its own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;For example, if the control is created successfully, then SOLIDWORKS passes true for Status to the add-in and the return value is ignored. If the control fails to be created, SOLIDWORKS passes false for Status to the add-in and the return value is swHandleActiveXCreationFailure_Continue. &lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;Do not call &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~GetControl.html"&gt;IPropertyManagerPageActiveX::GetControl&lt;/a&gt; to get the interface object for this ActiveX control.&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;You cannot get a reference to the ActiveX control inside this event handler because the page is not &lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;displayed when this notification is sent. You can only get the reference to the control after the PropertyManager page is displayed. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this ActiveX control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription>True if the ActiveX control creation was successful, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Action to take if the creation of the ActiveX control failed as defined in swHandleActiveXCreationFailure (see Remarks)</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the button</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this check box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This handler method is called when the PropertyManager page is about to close. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;SOLIDWORKS controls when add-ins can do work. An add-in is unable to do any real work within the PropertyManager2Handler6::OnClose handler because the PropertyManager page and command are closing. So, typically the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~AfterClose.html"&gt;IPropertyPage2Handler6::AfterClose&lt;/a&gt; handler is called after IPropertyManager2Handler6::OnClose to allow an add-in to do work. However:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;&lt;!--(Table)=========================================================--&gt;
&lt;td_null&gt;&lt;/td_null&gt;&lt;table style="BORDER-SPACING: 0px" x-use-null-cells=""&gt;
&lt;colgroup&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 49.57%"&gt;
&lt;/colgroup&gt;&lt;tbody&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;If PropertyManager page is...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;And you implemented the handler in... &lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;Then you...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~Pinned.html"&gt;Not pinned&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Can prevent the PropertyManager page from closing by setting the HRESULT return value to S_false.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Should use the Err.Raise method with a value of 1 to prevent the PropertyManager page from closing. In VB.NET, use 0 with Err.Raise.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px" colspan="2"&gt;
&lt;p&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;When control returns to SOLIDWORKS:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManager page remains displayed on the screen.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManagerPage2Handler5::AfterClose handler is not called.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Pinned&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++ or Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="WIDTH: 49.57%" width="49.57%"&gt;
&lt;p&gt;Set HRESULT to S_false to close the PropertyManager page (i.e., ignore the fact that the page is pinned). &lt;/p&gt;
&lt;p&gt;This allows your add-in to call the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~AfterClose.html"&gt;IPropertyManagerPage2Handler6::AfterClose&lt;/a&gt; handler and do its work. To avoid aggravating your user, who expected the PropertyManager page &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;to remain pinned, you should re-display and re-pin the PropertyManager page after the add-in finishes its work.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; In a previous version of this method, &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler3~OnClose.html"&gt;IPropertyManagerPage2Handler3::OnClose&lt;/a&gt;, if the user clicked the Cancel button and the PropertyManager page had a pushpin, then this method returned swPropertyManagerPageClose_Closed. This version of this method returns swPropertyManagerPageClose_Cancel in this scenario.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Managed code can indicate that a PropertyManager page cannot be closed. Throw a COM exception with an error code of 1. For example, in C#:&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font size="2" face="Courier New"&gt;void OnClose (int reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Throw a COM exception as an indication the PropertyManager &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // page cannot be closed at this time:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // The error code must be 1, which equates to S_FALSE.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; COMException ex = new COMException("Cannot close PropertyManager page", 1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; throw ex;&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/font&gt;&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription>Reason this method is called as defined in swPropertyManagerPageCloseReasons_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if the combo box was set up as an editable text box. If the combo box is set up to as a static text box, then this method is not called. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler6::OnComboxSelectionChanged&lt;/a&gt; to find out what is in the text box of the combo box. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. The text passed into this method is the up-to-date text.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler6~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler6::OnComboxEditChanged&lt;/a&gt; to &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;find out what is in the text box of the combo box.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. To get the current text, use the value of Item that is passed into the method as the argument to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~ItemText.html"&gt;IPropertyManagerPageCombobox::ItemText&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user has edited the text in the text box and then clicks the arrow to show or hide the list box of the combo box, and the text in the text box matches the first character in any of the items in the list, then that item is automatically selected in the list and this method is called, indicating that the selected item has changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Resource ID of the check box in title of the group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box in the title of the group box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the arrow that open a group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription>True if the group box is opened, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the Help file opens successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnKeystroke</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;After the add-in has finished processing the keystroke, the message continues on and is processed by Windows. Because processing must occur, nothing should be done to destroy the page nor any action performed that could disrupt normal Windows processing while the add-in is handling this keystroke.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To enable this functionality for this PropertyManager page, set the Options argument of &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;to swPropertyManagerOptions_HandleKeystrokes. By default, this style is not enabled because most applications are not interested in processing keystrokes, and it is a potential performance bottleneck if lots of keystrokes are occurring. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Wparam</ParamName>
              <ParamDescription>wparam argument from Windows processing; indicates the keystroke that occurredNOTE: From the standard set of virtual keys from Windows. Refer to the Virtual Key Code information from Microsoft documentation; for example, the Alt key is VK_MENU.</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Message</ParamName>
              <ParamDescription>Message being processed by Windows; one of these values: 


WM_KEYDOWN 0x0100

WM_KEYUP 0x0101

WM_CHAR 0x0102

WM_DEADCHAR 0x0103

WM_SYSKEYDOWN 0x0104

WM_SYSKEYUP 0x0105

WM_SYSCHAR 0x0106

WM_SYSDEADCHAR 0x0107</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Lparam</ParamName>
              <ParamDescription>lparam argument from Windows processing; bitmask containing various pieces of information; dependent on specific message</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that has focus when the keystroke was made; this is the ID specified when the control was created in IPropertyManagerPage2::AddControl or IPropertyManagerPage2::IAddControl or IPropertyManagerPage2::AddGroupBox or IPropertyManagerPage2::IAddGroupBox.</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True indicates that the keystroke has been handled by the add-in and SOLIDWORKS should not continue to try to process it, false indicates that the keystroke has not been handled by the add-in and SOLIDWORKS will continue to try to process it</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the list box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the next page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the number box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of option</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnPopupMenuItem</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>The add-in should then perform the appropriate action.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnPopupMenuItemUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;Thus, this method: &lt;/p&gt;
&lt;ul style="MARGIN-RIGHT: 0px" dir="ltr"&gt;
&lt;li&gt;Processes a request for the state of the specified pop-up menu item associated with the PropertyManager page. 
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiDescriptionText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Passes the state back to SOLIDWORKS.&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem)</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>retval</ParamName>
              <ParamDescription>State of the specified unique user-defined pop-up menu item: 

0 - Not selected (i.e., not checked) and disabled (i.e., grayed out) 

1 - Not selected and enabled

2 - Selected (i.e., checked) and disabled 

3 - Selected and enabled</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnPreview</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To show a Preview button on a PropertyManager page, include swPropertyManagerOptions_PreviewButton in the Options argument of &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can do whatever you want in response to the Preview button being clicked. Your add-in is responsible for preview handling, including keeping track of the state of the Preview button. Your add-in controls what happens when the Preview button is clicked; SOLIDWORKS takes not action when the Preview button is clicked. SOLIDWORKS ignores the return value because by the time the callback handler is called, the button has already changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Remarks</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the previous page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnRedo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>You control the Redo button using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~EnableButton.html"&gt;IPropertyManagerPage2::EnableButton&lt;/a&gt; and specifying swPropertyManagerPageButton_Redo for WhichOne.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can collect information using this method. For example, you can get the selection type from the last selection. Next, use the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt; property to get the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; object. Then, use the various ICallout properties to control the callout text and display characteristics based on that selection information.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is a pre-notification.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts. &lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;a post-notification. The callout pointed to by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt;&amp;nbsp;no longer exists, so do not make any calls to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; methods.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the selection box about to receive focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called when your application uses a selection method, such as &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~SelectByID2.html"&gt;IModelDocExtension::SelectByID2&lt;/a&gt;, just as if the selection was made interactively.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor a post-notification. The add-in should not be taking any action that may affect the model or the selection list. The add-in should only be querying information, presumably about the state of selections to set up its own information correctly.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Regardless of how many items the user selects, this method is called only once per interactive box selection. In other words, if the user selects six faces using a box selection, this method is called only once.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription>Number of items in this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnSliderPositionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler6::OnSliderPositionChanged to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur. &lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderTrackingCompleted.html"&gt;IPropertyManagerPage2Handler5::OnSliderTrackingCompleted&lt;/a&gt; to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnSliderTrackingCompleted</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler5::OnSliderTrackingCompleted to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler5::OnSliderPositionChanged&lt;/a&gt; to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnSubmitSelection</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;If writing a VBA macro, then you must set this method to true for the user to select something. If this method is not set to true, then the user cannot select anything. This method is set to false by default.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called by SOLIDWORKS when an add-in has a PropertyManager page displayed and a selection is made that passes the selection filter criteria set up for a selection list box. The add-in can then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Take the Dispatch pointer and the selection type.&lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;QueryInterface the Dispatch pointer to get the specific interface.&lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Use APIs of that interface to determine if the selection should be allowed or not. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/div&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is accepted, return True, and processing will continue normally.&lt;br&gt;&lt;br&gt;- or -&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is rejected, return false, and SOLIDWORKS will not accept the selection, just as if the selection did not pass the selection filter criteria of the selection list box. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The add-in should not Release() the Dispatch pointer. SOLIDWORKS will Release() the Dispatch pointer upon return from this method.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor post-notification. The add-in should not be taking any action that might affect the model or the selection list. The add-in should only be querying information and then returning True/VARIANT_TRUE or false/VARIANT_FALSE.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;ItemText is returned to SOLIDWORKS and stored on the selected object and can be used by your PropertyManager page selection list boxes for the life of that selection.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the active selection box, where this selection is being made</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Selection</ParamName>
              <ParamDescription>Object being selected</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelType</ParamName>
              <ParamDescription>Entity type of the selection as defined in swSelectType_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>ItemText</ParamName>
              <ParamDescription>Item for selection list box (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnTabClicked</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The value of Id is the ID that was specified when the tab was created by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~AddTab.html"&gt;IPropertyManagerPage2::AddTab&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks a tab, control is passed to the add-in via this method. The add-in is expected to show or hide groups and controls intended to be visible or hidden on that tab. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Your add-in is responsible for showing and hiding the controls on a tab to simulate moving between tabs, making it look like the tab is a container for the controls. However, tabs are not containers for the groups or controls. Tabs are controls that are displayed in a certain way, making them look like control containers. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the tab clicked (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of text box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnUndo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler6~OnWhatsNew</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;Your add-in must implement this method. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks the What's New button on this PropertyManager page, the appropriate What's New Help topic is displayed. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ShowHelp.html"&gt;ISldWorks::ShowHelp&lt;/a&gt; to display the What's New Help topic. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8.html"&gt;IPropertyManagerPage2Handler8&lt;/a&gt;.</Description>
      <Remark>&lt;p&gt;To use this interface:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in a SOLIDWORKS VBA macro, you must reference the &lt;span style="FONT-WEIGHT: bold"&gt;SOLIDWORKS exposed type libraries for add-in use&lt;/span&gt; type library specific to the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~VersionHistory.html"&gt;version of SOLIDWORKS&lt;/a&gt; that you are running.&amp;nbsp; 
&lt;/li&gt;&lt;li&gt;in a SOLIDWORKS VB.NET or C# macro or add-in, you must reference the &lt;strong&gt;SOLIDWORKS.interop.swpublished&lt;/strong&gt; assembly and set ComVisibleAttribute to true (see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and&amp;nbsp;C# Macros and Add-ins&lt;/a&gt;).&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText"&gt;For all unimplemented methods of this object, the add-in application can return E_NOTIMPL.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~AfterActivation</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p style="MARGIN-BOTTOM: 0px"&gt;When the ActiveX control is created, the program creating the PropertyManager page should receive notification from this handler. Specify one of the available enumerators for this handler's return value:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Cancel. Continue creating the PropertyManager page without the ActiveX control. This is the default.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Retry. Try to create the ActiveX control again. You can reuse the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~SetClass.html"&gt;IPropertyManagerPageActiveX::SetClass&lt;/a&gt; method to change the control ID or the license key to perhaps use another similar control or another version of the control, and then specify swHandleActiveXCreationFailure_Retry. Avoid an endless loop situation.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Continue. Cancel creating PropertyManager page. For example, it might be that the PropertyManager page is useless without the control, so the calling add-in might want to quit and handle the situation on its own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;For example, if the control is created successfully, then SOLIDWORKS passes true for Status to the add-in and the return value is ignored. If the control fails to be created, SOLIDWORKS passes false for Status to the add-in and the return value is swHandleActiveXCreationFailure_Continue. &lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;Do not call &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~GetControl.html"&gt;IPropertyManagerPageActiveX::GetControl&lt;/a&gt; to get the interface object for this ActiveX control.&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;You cannot get a reference to the ActiveX control inside this event handler because the page is not &lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;displayed when this notification is sent. You can only get the reference to the control after the PropertyManager page is displayed. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this ActiveX control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription>True if the ActiveX control creation was successful, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Action to take if the creation of the ActiveX control failed as defined in swHandleActiveXCreationFailure (see Remarks)</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the button</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this check box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This handler method is called when the PropertyManager page is about to close. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;SOLIDWORKS controls when add-ins can do work. An add-in is unable to do any real work within the PropertyManager2Handler7::OnClose handler because the PropertyManager page and command are closing. So, typically the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~AfterClose.html"&gt;IPropertyPage2Handler7::AfterClose&lt;/a&gt; handler is called after IPropertyManager2Handler7::OnClose to allow an add-in to do work. However:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;&lt;!--(Table)=========================================================--&gt;
&lt;td_null&gt;&lt;/td_null&gt;&lt;table style="BORDER-SPACING: 0px" x-use-null-cells=""&gt;
&lt;colgroup&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 49.57%"&gt;
&lt;/colgroup&gt;&lt;tbody&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;If PropertyManager page is...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;And you implemented the handler in... &lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;Then you...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~Pinned.html"&gt;Not pinned&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Can prevent the PropertyManager page from closing by setting the HRESULT return value to S_FALSE.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Should use the Err.Raise method with a value of 1 to prevent the PropertyManager page from closing. In VB.NET, use 0 with Err.Raise.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px" colspan="2"&gt;
&lt;p&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;When control returns to SOLIDWORKS:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManager page remains displayed on the screen.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManagerPage2Handler7::AfterClose handler is not called.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Pinned&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++ or Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="WIDTH: 49.57%" width="49.57%"&gt;
&lt;p&gt;Set HRESULT to S_FALSE to close the PropertyManager page (i.e., ignore the fact that the page is pinned). &lt;/p&gt;
&lt;p&gt;This allows your add-in to call the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~AfterClose.html"&gt;IPropertyManagerPage2Handler7::AfterClose&lt;/a&gt; handler and do its work. To avoid aggravating your user, who expected the PropertyManager page &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;to remain pinned, you should re-display and re-pin the PropertyManager page after the add-in finishes its work.&lt;/p&gt;
&lt;p&gt;To close a pinned PropertyManager page by raising an exception, your application has to clear all selections by calling &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDoc2~ClearSelection2.html"&gt;IModelDoc2::ClearSelection2&lt;/a&gt;(true) in the call to IPropertyManagerPage2Handler7::OnClose. The PropertyManager page&amp;nbsp;will not close if selections exist.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; In a previous version of this method, &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler3~OnClose.html"&gt;IPropertyManagerPage2Handler3::OnClose&lt;/a&gt;, if the user clicked the Cancel button and the PropertyManager page had a pushpin, then this method returned swPropertyManagerPageClose_Closed. This version of this method returns swPropertyManagerPageClose_Cancel in this scenario.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Managed code can indicate that a PropertyManager page cannot be closed. Throw a COM exception with an error code of 1. For example, in C#:&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font size="2" face="Courier New"&gt;void OnClose (int reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Throw a COM exception as an indication the PropertyManager &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // page cannot be closed at this time:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // The error code must be 1, which equates to S_FALSE.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; COMException ex = new COMException("Cannot close PropertyManager page", 1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; throw ex;&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/font&gt;&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription>Reason this method is called as defined in swPropertyManagerPageCloseReasons_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if the combo box was set up as an editable text box. If the combo box is set up to as a static text box, then this method is not called. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler7::OnComboxSelectionChanged&lt;/a&gt; to find out what is in the text box of the combo box. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. The text passed into this method is the up-to-date text.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler7::OnComboxEditChanged&lt;/a&gt; to &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;find out what is in the text box of the combo box.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. To get the current text, use the value of Item that is passed into the method as the argument to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~ItemText.html"&gt;IPropertyManagerPageCombobox::ItemText&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user has edited the text in the text box and then clicks the arrow to show or hide the list box of the combo box, and the text in the text box matches the first character in any of the items in the list, then that item is automatically selected in the list and this method is called, indicating that the selected item has changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnGainedFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;To handle selection box focus, use &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler7::OnSelectionboxFocusChanged&lt;/a&gt;.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that gained focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Resource ID of the check box in title of the group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box in the title of the group box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the arrow that open a group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription>True if the group box is opened, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the Help file opens successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnKeystroke</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;After the add-in has finished processing the keystroke, the message continues on and is processed by Windows. Because processing must occur, nothing should be done to destroy the page nor any action performed that could disrupt normal Windows processing while the add-in is handling this keystroke.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To enable this functionality for this PropertyManager page, set the Options argument of &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;to swPropertyManagerOptions_HandleKeystrokes. By default, this style is not enabled because most applications are not interested in processing keystrokes, and it is a potential performance bottleneck if lots of keystrokes are occurring. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Wparam</ParamName>
              <ParamDescription>wparam argument from Windows processing; indicates the keystroke that occurredNOTE: From the standard set of virtual keys from Windows. Refer to the Virtual Key Code information from Microsoft documentation; for example, the Alt key is VK_MENU.</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Message</ParamName>
              <ParamDescription>Message being processed by Windows; one of these values: 


WM_KEYDOWN 0x0100

WM_KEYUP 0x0101

WM_CHAR 0x0102

WM_DEADCHAR 0x0103

WM_SYSKEYDOWN 0x0104

WM_SYSKEYUP 0x0105

WM_SYSCHAR 0x0106

WM_SYSDEADCHAR 0x0107</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Lparam</ParamName>
              <ParamDescription>lparam argument from Windows processing; bitmask containing various pieces of information; dependent on specific message</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that has focus when the keystroke was made; this is the ID specified when the control was created in IPropertyManagerPage2::AddControl or IPropertyManagerPage2::IAddControl or IPropertyManagerPage2::AddGroupBox or IPropertyManagerPage2::IAddGroupBox.</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True indicates that the keystroke has been handled by the add-in and SOLIDWORKS should not continue to try to process it, false indicates that the keystroke has not been handled by the add-in and SOLIDWORKS will continue to try to process it</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the list box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnLostFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;To handle selection box focus, use &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler7::OnSelectionboxFocusChanged&lt;/a&gt;.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that lost focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the next page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the number box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of option</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnPopupMenuItem</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>The add-in should then perform the appropriate action.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnPopupMenuItemUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;Thus, this method: &lt;/p&gt;
&lt;ul style="MARGIN-RIGHT: 0px" dir="ltr"&gt;
&lt;li&gt;processes a request for the state of the specified pop-up menu item associated with the PropertyManager page. 
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiDescriptionText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;passes the state back to SOLIDWORKS.&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem) </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>retval</ParamName>
              <ParamDescription>State of the specified unique user-defined pop-up menu item: 

0 - Not selected (i.e., not checked) and disabled (i.e., grayed out) 

1 - Not selected and enabled

2 - Selected (i.e., checked) and disabled 

3 - Selected and enabled</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnPreview</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To show a Preview button on a PropertyManager page, include swPropertyManagerOptions_PreviewButton in the Options argument of &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can do whatever you want in response to the Preview button being clicked. Your add-in is responsible for preview handling, including keeping track of the state of the Preview button. Your add-in controls what happens when the Preview button is clicked; SOLIDWORKS takes not action when the Preview button is clicked. SOLIDWORKS ignores the return value because by the time the callback handler is called, the button has already changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Remarks</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the previous page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnRedo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>You control the Redo button using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~EnableButton.html"&gt;IPropertyManagerPage2::EnableButton&lt;/a&gt; and specifying swPropertyManagerPageButton_Redo for WhichOne.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can collect information using this method. For example, you can get the selection type from the last selection. Next, use the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt; property to get the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; object. Then, use the various ICallout properties to control the callout text and display characteristics based on that selection information.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is a pre-notification.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts. &lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;a post-notification. The callout pointed to by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt;&amp;nbsp;no longer exists, so do not make any calls to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; methods.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>A PropertyManager page often has more than one selection list. The focus is always on the active selection list. When the focus changes to another selection list,&amp;nbsp;this subroutine is called. If there is only one selection list on the page, then the focus never leaves it, and this subroutine is never called.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the selection box with focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called when your application uses a selection method, such as &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~SelectByID2.html"&gt;IModelDocExtension::SelectByID2&lt;/a&gt;, just as if the selection was made interactively.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor a post-notification. The add-in should not be taking any action that may affect the model or the selection list. The add-in should only be querying information, presumably about the state of selections to set up its own information correctly.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Regardless of how many items the user selects, this method is called only once per interactive box selection. In other words, if the user selects six faces using a box selection, this method is called only once.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription>Number of items in this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnSliderPositionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler7::OnSliderPositionChanged to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur. &lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~OnSliderTrackingCompleted.html"&gt;IPropertyManagerPage2Handler7::OnSliderTrackingCompleted&lt;/a&gt; to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnSliderTrackingCompleted</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler7::OnSliderTrackingCompleted to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler7~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler7::OnSliderPositionChanged&lt;/a&gt; to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnSubmitSelection</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;If writing a macro, you must set this method to true for the user to select something. If this method is not set to true, then the user cannot select anything. This method is set to false by default.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called by SOLIDWORKS when an add-in has a PropertyManager page displayed and a selection is made that passes the selection filter criteria set up for a selection list box. The add-in can then:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Take the Dispatch pointer and the selection type.&lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;QueryInterface the Dispatch pointer to get the specific interface.&lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Use APIs of that interface to determine if the selection should be allowed or not. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/div&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is accepted, return True, and processing will continue normally.&lt;br&gt;&lt;br&gt;- or -&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is rejected, return false, and SOLIDWORKS will not accept the selection, just as if the selection did not pass the selection filter criteria of the selection list box. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The add-in should not Release() the Dispatch pointer. SOLIDWORKS will Release() the Dispatch pointer upon return from this method.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor post-notification. The add-in should not be taking any action that might affect the model or the selection list. The add-in should only be querying information and then returning true/VARIANT_TRUE or false/VARIANT_FALSE.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;ItemText is returned to SOLIDWORKS and stored on the selected object and can be used by your PropertyManager page selection list boxes for the life of that selection.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the active selection box, where this selection is being made</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Selection</ParamName>
              <ParamDescription>Object being selected</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelType</ParamName>
              <ParamDescription>Entity type of the selection as defined in swSelectType_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>ItemText</ParamName>
              <ParamDescription>Item for selection list box (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnTabClicked</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The value of Id is the ID that was specified when the tab was created by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~AddTab.html"&gt;IPropertyManagerPage2::AddTab&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks a tab, control is passed to the add-in via this method. The add-in is expected to show or hide groups and controls intended to be visible or hidden on that tab. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Your add-in is responsible for showing and hiding the controls on a tab to simulate moving between tabs, making it look like the tab is a container for the controls. However, tabs are not containers for the groups or controls. Tabs are controls that are displayed in a certain way, making them look like control containers. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the tab clicked (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of text box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnUndo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler7~OnWhatsNew</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsoleted. Superseded by</Description>
          <Remark>&lt;p&gt;Your add-in must implement this method. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks the What's New button on this PropertyManager page, the appropriate What's New Help topic is displayed. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ShowHelp.html"&gt;ISldWorks::ShowHelp&lt;/a&gt; to display the What's New Help topic. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9.html"&gt;IPropertyManagerPage2Handler9&lt;/a&gt;.</Description>
      <Remark>&lt;p&gt;To use this interface:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in a SOLIDWORKS VBA macro, you must reference the &lt;span style="FONT-WEIGHT: bold"&gt;SOLIDWORKS exposed type libraries for add-in use&lt;/span&gt; type library specific to the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~VersionHistory.html"&gt;version of SOLIDWORKS&lt;/a&gt; that you are running.&amp;nbsp; 
&lt;/li&gt;&lt;li&gt;in a SOLIDWORKS&amp;nbsp;VB.NET or C#&amp;nbsp;macro or add-in, you must reference the &lt;strong&gt;SOLIDWORKS.interop.swpublished&lt;/strong&gt; assembly and set ComVisibleAttribute to true (see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C# Macros and Add-ins&lt;/a&gt;).&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText"&gt;For all unimplemented methods of this object, the add-in application can return E_NOTIMPL.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~AfterActivation</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~AfterActivation.html"&gt;IPropertyManagerPage2Handler9::AfterActivation&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p style="MARGIN-BOTTOM: 0px"&gt;When the ActiveX control is created, the program creating the PropertyManager page should receive notification from this handler. Specify one of the available enumerators for this handler's return value:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Cancel. Continue creating the PropertyManager page without the ActiveX control. This is the default.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Retry. Try to create the ActiveX control again. You can reuse the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~SetClass.html"&gt;IPropertyManagerPageActiveX::SetClass&lt;/a&gt; method to change the control ID or the license key to perhaps use another similar control or another version of the control, and then specify swHandleActiveXCreationFailure_Retry. Avoid an endless loop situation.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Continue. Cancel creating PropertyManager page. For example, it might be that the PropertyManager page is useless without the control, so the calling add-in might want to quit and handle the situation on its own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;For example, if the control is created successfully, then SOLIDWORKS passes true for Status to the add-in and the return value is ignored. If the control fails to be created, SOLIDWORKS passes false for Status to the add-in and the return value is swHandleActiveXCreationFailure_Continue. &lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;Do not call &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~GetControl.html"&gt;IPropertyManagerPageActiveX::GetControl&lt;/a&gt; to get the interface object for this ActiveX control.&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;You cannot get a reference to the ActiveX control inside this event handler because the page is not &lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;displayed when this notification is sent. You can only get the reference to the control after the PropertyManager page is displayed. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this ActiveX control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription>True if the ActiveX control creation was successful, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Action to take if the creation of the ActiveX control failed as defined in swHandleActiveXCreationFailure (see Remarks)</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the button</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this check box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This handler method is called when the PropertyManager page is about to close. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;SOLIDWORKS controls when add-ins can do work. An add-in is unable to do any real work within the PropertyManager2Handler8::OnClose handler because the PropertyManager page and command are closing. So, typically the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~AfterClose.html"&gt;IPropertyPage2Handler8::AfterClose&lt;/a&gt; handler is called after IPropertyManager2Handler7::OnClose to allow an add-in to do work. However:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;&lt;!--(Table)=========================================================--&gt;
&lt;td_null&gt;&lt;/td_null&gt;&lt;table style="BORDER-SPACING: 0px" x-use-null-cells=""&gt;
&lt;colgroup&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 49.57%"&gt;
&lt;/colgroup&gt;&lt;tbody&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;If PropertyManager page is...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;And you implemented the handler in... &lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: #dbdbdb" bgcolor="#dbdbdb"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;Then you...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~Pinned.html"&gt;Not pinned&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Can prevent the PropertyManager page from closing by setting the HRESULT return value to S_FALSE.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Should use the Err.Raise method with a value of 1 to prevent the PropertyManager page from closing. In VB.NET, use 0 with Err.Raise.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px" colspan="2"&gt;
&lt;p&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;When control returns to SOLIDWORKS:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManager page remains displayed on the screen.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManagerPage2Handler8::AfterClose handler is not called.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;Pinned&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; PADDING-RIGHT: 10px"&gt;
&lt;p&gt;C++ or Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="WIDTH: 49.57%" width="49.57%"&gt;
&lt;p&gt;Set HRESULT to S_FALSE to close the PropertyManager page (i.e., ignore the fact that the page is pinned). &lt;/p&gt;
&lt;p&gt;This allows your add-in to call the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~AfterClose.html"&gt;IPropertyManagerPage2Handler8::AfterClose&lt;/a&gt; handler and do its work. To avoid aggravating your user, who expected the PropertyManager page &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;to remain pinned, you should re-display and re-pin the PropertyManager page after the add-in finishes its work.&lt;/p&gt;
&lt;p&gt;To close a pinned PropertyManager page by raising an exception, your application has to clear all selections by calling &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDoc2~ClearSelection2.html"&gt;IModelDoc2::ClearSelection2&lt;/a&gt;(true) in the call to IPropertyManagerPage2Handler8::OnClose. The PropertyManager page&amp;nbsp;will not close if selections exist.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; In a previous version of this method, &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler3~OnClose.html"&gt;IPropertyManagerPage2Handler3::OnClose&lt;/a&gt;, if the user clicked the Cancel button and the PropertyManager page had a pushpin, then this method returned swPropertyManagerPageClose_Closed. This version of this method returns swPropertyManagerPageClose_Cancel in this scenario.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Managed code can indicate that a PropertyManager page cannot be closed. Throw a COM exception with an error code of 1. For example, in C#:&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font size="2" face="Courier New"&gt;void OnClose (int reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Throw a COM exception as an indication the PropertyManager &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // page cannot be closed at this time:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // The error code must be 1, which equates to S_FALSE.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; COMException ex = new COMException("Cannot close PropertyManager page", 1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; throw ex;&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/font&gt;&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription>Reason this method is called as defined in swPropertyManagerPageCloseReasons_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if the combo box was set up as an editable text box. If the combo box is set up to as a static text box, then this method is not called. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler8::OnComboxSelectionChanged&lt;/a&gt; to find out what is in the text box of the combo box. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. The text passed into this method is the up-to-date text.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler8::OnComboxEditChanged&lt;/a&gt; to &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;find out what is in the text box of the combo box.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. To get the current text, use the value of Item that is passed into the method as the argument to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~ItemText.html"&gt;IPropertyManagerPageCombobox::ItemText&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user has edited the text in the text box and then clicks the arrow to show or hide the list box of the combo box, and the text in the text box matches the first character in any of the items in the list, then that item is automatically selected in the list and this method is called, indicating that the selected item has changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnGainedFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p&gt;To handle selection box focus, use &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler8::OnSelectionboxFocusChanged&lt;/a&gt;.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that gained focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Resource ID of the check box in the title of the group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box in the title of the group box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the arrow that opens a group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription>True if the group box is opened, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the Help file opens successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnKeystroke</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;After the add-in has finished processing the keystroke, the message continues on and is processed by Windows. Because processing must occur, nothing should be done to destroy the page nor any action performed that could disrupt normal Windows processing while the add-in is handling this keystroke.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To enable this functionality for this PropertyManager page, set the Options argument of &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;to swPropertyManagerOptions_HandleKeystrokes. By default, this style is not enabled because most applications are not interested in processing keystrokes, and it is a potential performance bottleneck if lots of keystrokes are occurring.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Wparam</ParamName>
              <ParamDescription>wparam argument from Windows processing; indicates the keystroke that occurredNOTE: From the standard set of virtual keys from Windows. Refer to the Virtual Key Code information from Microsoft documentation; for example, the Alt key is VK_MENU.</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Message</ParamName>
              <ParamDescription>Message being processed by Windows; one of these values: 
 


WM_KEYDOWN 0x0100

WM_KEYUP 0x0101

WM_CHAR 0x0102

WM_DEADCHAR 0x0103

WM_SYSKEYDOWN 0x0104

WM_SYSKEYUP 0x0105

WM_SYSCHAR 0x0106

WM_SYSDEADCHAR 0x0107</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Lparam</ParamName>
              <ParamDescription>lparam argument from Windows processing; bitmask containing various pieces of information; dependent on specific message</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that has focus when the keystroke was made; this is the ID specified when the control was created in IPropertyManagerPage2::AddControl or IPropertyManagerPage2::IAddControl or IPropertyManagerPage2::AddGroupBox or IPropertyManagerPage2::IAddGroupBox.</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True indicates that the keystroke has been handled by the add-in and SOLIDWORKS should not continue to try to process it, false indicates that the keystroke has not been handled by the add-in and SOLIDWORKS will continue to try to process it</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnListboxRMBUp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the list box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>PosX</ParamName>
              <ParamDescription>X coordinate of the right mouse button menu</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>PosY</ParamName>
              <ParamDescription>Y coordinate of the right mouse button menu</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the list box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnLostFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p&gt;To handle selection box focus, use &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler8::OnSelectionboxFocusChanged&lt;/a&gt;.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that lost focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the next page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the number box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Number in the number box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of option</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnPopupMenuItem</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>The add-in should then perform the appropriate action.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnPopupMenuItemUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p&gt;Thus, this method: &lt;/p&gt;
&lt;ul style="MARGIN-RIGHT: 0px" dir="ltr"&gt;
&lt;li&gt;Processes a request for the state of the specified pop-up menu item associated with the PropertyManager page. 
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiDescriptionText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Passes the state back to SOLIDWORKS.&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem) </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>retval</ParamName>
              <ParamDescription>State of the specified unique user-defined pop-up menu item: 

0 - Not selected (i.e., not checked) and disabled (i.e., grayed out) 

1 - Not selected and enabled

2 - Selected (i.e., checked) and disabled 

3 - Selected and enabled</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnPreview</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To show a Preview button on a PropertyManager page, include swPropertyManagerOptions_PreviewButton in the Options argument of &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can do whatever you want in response to the Preview button being clicked. Your add-in is responsible for preview handling, including keeping track of the state of the Preview button. Your add-in controls what happens when the Preview button is clicked; SOLIDWORKS takes not action when the Preview button is clicked. SOLIDWORKS ignores the return value because by the time the callback handler is called, the button has already changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Remarks</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the previous page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnRedo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>You control the Redo button using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~EnableButton.html"&gt;IPropertyManagerPage2::EnableButton&lt;/a&gt; and specifying swPropertyManagerPageButton_Redo for WhichOne.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can collect information using this method. For example, you can get the selection type from the last selection. Next, use the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt; property to get the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; object. Then, use the various ICallout properties to control the callout text and display characteristics based on that selection information.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is a pre-notification.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts. &lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;a post-notification. The callout pointed to by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt;&amp;nbsp;no longer exists, so do not make any calls to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; methods.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>A PropertyManager page often has more than one selection list. The focus is always on the active selection list. When the focus changes to another selection list,&amp;nbsp;this subroutine is called. If there is only one selection list on the page, then the focus never leaves it, and this subroutine is never called.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box with focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called when your application uses a selection method, such as &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~SelectByID2.html"&gt;IModelDocExtension::SelectByID2&lt;/a&gt;, just as if the selection was made interactively.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor a post-notification. The add-in should not be taking any action that may affect the model or the selection list. The add-in should only be querying information, presumably about the state of selections to set up its own information correctly.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Regardless of how many items the user selects, this method is called only once per interactive box selection. In other words, if the user selects six faces using a box selection, this method is called only once.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription>Number of items in this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnSliderPositionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler8::OnSliderPositionChanged to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur. &lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~OnSliderTrackingCompleted.html"&gt;IPropertyManagerPage2Handler8::OnSliderTrackingCompleted&lt;/a&gt; to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnSliderTrackingCompleted</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler8::OnSliderTrackingCompleted to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler8~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler8::OnSliderPositionChanged&lt;/a&gt; to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnSubmitSelection</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~OnSubmitSelection.html"&gt;IPropertyManagerPage2Handler9::OnSubmitSelection&lt;/a&gt;</Description>
          <Remark>&lt;p&gt;If writing a macro, you must set this method to true for the user to select something (see the example). If this method is not set to true, then the user cannot select anything. This method is set to false by default.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called by SOLIDWORKS when an add-in has a PropertyManager page displayed and a selection is made that passes the selection filter criteria set up for a selection list box. The add-in can then:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol style="LIST-STYLE-TYPE: decimal" type="1"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Take the Dispatch pointer and the selection type.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;QueryInterface the Dispatch pointer to get the specific interface.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Use APIs of that interface to determine if the selection should be allowed or not. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;ul style="LIST-STYLE-TYPE: decimal" type="1"&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is accepted, return True, and processing will continue normally.&lt;br&gt;&lt;br&gt;- or -&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the selection is rejected, return false, and SOLIDWORKS will not accept the selection, just as if the selection did not pass the selection filter criteria of the selection list box. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The add-in should not Release() the Dispatch pointer. SOLIDWORKS will Release() the Dispatch pointer upon return from this method.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor post-notification. The add-in should not be taking any action that might affect the model or the selection list. The add-in should only be querying information and then returning true/VARIANT_TRUE or false/VARIANT_FALSE.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;ItemText is returned to SOLIDWORKS and stored on the selected object and can be used by your PropertyManager page selection list boxes for the life of that selection.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the active selection box, where this selection is being made</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Selection</ParamName>
              <ParamDescription>Object being selected</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelType</ParamName>
              <ParamDescription>Entity type of the selection as defined in swSelectType_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>ItemText</ParamName>
              <ParamDescription>Item for selection list box (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnTabClicked</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The value of Id is the ID that was specified when the tab was created by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~AddTab.html"&gt;IPropertyManagerPage2::AddTab&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks a tab, control is passed to the add-in via this method. The add-in is expected to show or hide groups and controls intended to be visible or hidden on that tab. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Your add-in is responsible for showing and hiding the controls on a tab to simulate moving between tabs, making it look like the tab is a container for the controls. However, tabs are not containers for the groups or controls. Tabs are controls that are displayed in a certain way, making them look like control containers. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the clicked tab (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the text box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnUndo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnWhatsNew</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p&gt;Your add-in must implement this method. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks the What's New button on this PropertyManager page, the appropriate What's New Help topic is displayed. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ShowHelp.html"&gt;ISldWorks::ShowHelp&lt;/a&gt; to display the What's New Help topic. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler8~OnWindowFromHandleControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark>&lt;p style="MARGIN-BOTTOM: 0px"&gt;If the .NET control is not successfully created (Status = false), the program creating the PropertyManager page should receive notification from this handler. Return one of the following options in &lt;a href="ms-its:swconst.chm::/SOLIDWORKS.Interop.swconst~SOLIDWORKS.Interop.swconst.swHandleWindowFromHandleCreationFailure_e.html"&gt;swHandleWindowFromHandleCreationFailure_e&lt;/a&gt;:&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleWindowFromHandleCreationFailure_Cancel. Continue creating the PropertyManager page without the&amp;nbsp;.NET control. This is the default.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleWindowFromHandleCreationFailure_Retry. Try to create the .NET control again. You can&amp;nbsp;call the&amp;nbsp;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageWindowFromHandle~SetWindowHandle.html"&gt;IPropertyManagerPageWindowFromHandle::SetWindowHandle&lt;/a&gt; method to change the&amp;nbsp;.NET control handle&amp;nbsp;to perhaps use another similar control or another version of the control, and then return swHandleWindowFromHandleCreationFailure_Retry. Avoid an endless loop situation.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleWindowFromHandleCreationFailure_Continue. Cancel creating PropertyManager page. For example, it might be that the PropertyManager page is useless without the control, so the calling add-in might want to quit and handle the situation on its own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;For example if the control is created successfully, then SOLIDWORKS passes Status = true&amp;nbsp;to the add-in, and nothing is returned. If the control fails to be created, SOLIDWORKS passes Status = false to the add-in, and the handler returns swHandleWindowFromHandleCreationFailure_Continue. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this .NET control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription>True if the .NET control is successfully created; false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>If Status = true, return nothing</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Must be implemented by the add-in application to handle callbacks from</Description>
      <Remark>&lt;p&gt;To use this interface:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a SOLIDWORKS VBA macro, you must reference the &lt;span style="FONT-WEIGHT: bold"&gt;SOLIDWORKS exposed type libraries for add-in use&lt;/span&gt; type library specific to the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~VersionHistory.html"&gt;version of SOLIDWORKS&lt;/a&gt; that you are running.&amp;nbsp; 
&lt;/li&gt;&lt;li&gt;In a SOLIDWORKS VB.NET or C# macro or add-in, you must reference the &lt;strong&gt;SOLIDWORKS.interop.swpublished&lt;/strong&gt; assembly and set ComVisibleAttribute to true (see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET or C# Macros and Add-ins&lt;/a&gt;).&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText"&gt;For all unimplemented methods of this object, the add-in application can return E_NOTIMPL.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~AfterActivation</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called after the PropertyManager page has been activated.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called after the PropertyManager page is closed.</Description>
          <Remark>This&amp;nbsp;function should contain code to avoid&amp;nbsp;potential problems with garbage collection.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnActiveXControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when an attempt to create an ActiveX control on the PropertyManager page occurs.</Description>
          <Remark>&lt;p style="MARGIN-BOTTOM: 0px"&gt;When the ActiveX control is created, the program creating the PropertyManager page should receive notification from this handler. Specify one of the available enumerators for this handler's return value:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Cancel. Continue creating the PropertyManager page without the ActiveX control. This is the default.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Retry. Try to create the ActiveX control again. You can reuse the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~SetClass.html"&gt;&lt;font color="#0000c0"&gt;IPropertyManagerPageActiveX::SetClass&lt;/font&gt;&lt;/a&gt; method to change the control ID or the license key to perhaps use another similar control or another version of the control, and then specify swHandleActiveXCreationFailure_Retry. Avoid an endless loop situation.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleActiveXCreationFailure_Continue. Cancel creating PropertyManager page. For example, it might be that the PropertyManager page is useless without the control, so the calling add-in might want to quit and handle the situation on its own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;For example, if the control is created successfully, then SOLIDWORKS passes true for Status to the add-in and the return value is ignored. If the control fails to be created, SOLIDWORKS passes false for Status to the add-in and the return value is swHandleActiveXCreationFailure_Continue. &lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;Do not call &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageActiveX~GetControl.html"&gt;&lt;font color="#0000c0"&gt;IPropertyManagerPageActiveX::GetControl&lt;/font&gt;&lt;/a&gt; to get the interface object for this ActiveX control.&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;You cannot get a reference to the ActiveX control inside this event handler because the page is not &lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;displayed when this notification is sent. You can only get the reference to the control after the PropertyManager page is displayed. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this ActiveX control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription>True if the ActiveX control creation was successful, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Action to take if the creation of the ActiveX control failed as defined in swHandleActiveXCreationFailure (see Remarks)</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks this button on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the button</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user selects this check box on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the check box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when this PropertyManager page is closing.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This handler method is called when the PropertyManager page is about to close.&amp;nbsp;This&amp;nbsp;function should contain code to avoid potential problems with garbage collection.&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;SOLIDWORKS controls when add-ins can do work. An add-in is unable to do any real work within the PropertyManager2Handler9::OnClose handler because the PropertyManager page and command are closing. So, typically the &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~AfterClose.html"&gt;IPropertyPage2Handler9::AfterClose&lt;/a&gt; handler is called after IPropertyManager2Handler9::OnClose to allow an add-in to do work. However:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;&lt;!--(Table)=========================================================--&gt;
&lt;table style="BORDER-SPACING: 0px" x-use-null-cells=""&gt;
&lt;colgroup&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 25.21%"&gt;
&lt;col style="WIDTH: 49.57%"&gt;&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: rgb(219,219,219)"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;If PropertyManager page is...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: rgb(219,219,219)"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;And you implemented the handler in...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="VERTICAL-ALIGN: bottom; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; BACKGROUND-COLOR: rgb(219,219,219)"&gt;
&lt;p class="apiTableColHeading"&gt;&lt;strong&gt;Then you...&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none"&gt;
&lt;p&gt;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~Pinned.html"&gt;Not pinned&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px"&gt;
&lt;p&gt;C++&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px"&gt;
&lt;p&gt;Can prevent the PropertyManager page from closing by setting the HRESULT return value to S_FALSE.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px"&gt;
&lt;p&gt;Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px"&gt;
&lt;p&gt;Should use the Err.Raise method with a value of 1 to prevent the PropertyManager page from closing. In VB.NET, use 0 with Err.Raise.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px" colspan="2"&gt;
&lt;p&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;When control returns to SOLIDWORKS:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManager page remains displayed on the screen.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The IPropertyManagerPage2Handler9::AfterClose handler is not called.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr style="x-cell-content-align: top" valign="top"&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px; BORDER-LEFT-STYLE: none"&gt;
&lt;p&gt;Pinned&lt;/p&gt;&lt;/td&gt;
&lt;td style="BORDER-BOTTOM-STYLE: none; BORDER-RIGHT-STYLE: none; PADDING-LEFT: 10px"&gt;
&lt;p&gt;C++ or Visual Basic&lt;/p&gt;&lt;/td&gt;
&lt;td style="WIDTH: 49.57%" width="49.57%"&gt;
&lt;p&gt;Set HRESULT to S_FALSE to close the PropertyManager page (i.e., ignore the fact that the page is pinned).&lt;/p&gt;
&lt;p&gt;This allows your add-in to call the IPropertyManagerPage2Handler9::AfterClose handler and do its work. To avoid aggravating your user, who expected the PropertyManager page &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;to remain pinned, you should re-display and re-pin the PropertyManager page after the add-in finishes its work.&lt;/p&gt;
&lt;p&gt;To close a pinned PropertyManager page by raising an exception, your application has to clear all selections by calling &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDoc2~ClearSelection2.html"&gt;IModelDoc2::ClearSelection2&lt;/a&gt;(true) in the call to IPropertyManagerPage2Handler9::OnClose. The PropertyManager page&amp;nbsp;will not close if selections exist.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; In a previous version of this method, &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler3~OnClose.html"&gt;IPropertyManagerPage2Handler3::OnClose&lt;/a&gt;, if the user clicked the Cancel button and the PropertyManager page had a pushpin, then this method returned swPropertyManagerPageClose_Closed. This version of this method returns swPropertyManagerPageClose_Cancel in this scenario.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Managed code can indicate that a PropertyManager page cannot be closed. Throw a COM exception with an error code of 1. For example, in C#:&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font size="2" face="Courier New"&gt;void OnClose (int reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Throw a COM exception as an indication the PropertyManager&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // page cannot be closed at this time:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // The error code must be 1, which equates to S_FALSE.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; COMException ex = new COMException("Cannot close PropertyManager page", 1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; throw ex;&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/font&gt;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;SOLIDWORKS does not allow suppressing components or features&amp;nbsp;while a PropertyManager page is open.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription>Reason this method is called as defined in swPropertyManagerPageCloseReasons_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnComboboxEditChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user changes the text string in the text box of a combo box on this PropertyManager page.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if the combo box was set up as an editable text box. If the combo box is set up to as a static text box, then this method is not called. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler9::OnComboxSelectionChanged&lt;/a&gt; to find out what is in the text box of the combo box. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. The text passed into this method is the up-to-date text.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user changes the selected item in a combo box on this PropertyManager page.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user can edit the text in the text box, then use this method with &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~OnComboboxEditChanged.html"&gt;IPropertyManagerPage2Handler9::OnComboxEditChanged&lt;/a&gt; to &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;find out what is in the text box of the combo box.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, the control may not yet be updated with the current selection, so the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~CurrentSelection.html"&gt;IPropertyManagerPageCombobox::CurrentSelection&lt;/a&gt; property is not reliable. To get the current text, use the value of Item that is passed into the method as the argument to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageCombobox~ItemText.html"&gt;IPropertyManagerPageCombobox::ItemText&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the user has edited the text in the text box and then clicks the arrow to show or hide the list box of the combo box, and the text in the text box matches the first character in any of the items in the list, then that item is automatically selected in the list and this method is called, indicating that the selected item has changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the combo box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnGainedFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a control (edit box, combo box, list box, or number box) gains focus on this PropertyManager page.</Description>
          <Remark>&lt;p&gt;To handle selection box focus, use &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler9::OnSelectionboxFocusChanged&lt;/a&gt;.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that gained focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user selects the check box in the title of a group box on a PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Resource ID of the check box in the title of the group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription>True if the check box in the title of the group box is selected, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks an arrow to open a group box on the PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the arrow that opens a group box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription>True if the group box is opened, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the Help button on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the Help file opens successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnKeystroke</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Processes a keystroke that occurred on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Wparam</ParamName>
              <ParamDescription>wparam argument from Windows processing; indicates the keystroke that occurredNOTE: From the standard set of virtual keys from Windows. Refer to the Virtual Key Code information from Microsoft documentation; for example, the Alt key is VK_MENU.</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Message</ParamName>
              <ParamDescription>Message being processed by Windows; one of these values:
 


WM_KEYDOWN 256 or 0x100

WM_KEYUP 257 or 0x101

WM_CHAR 258 or 0x102

WM_DEADCHAR 259 or 0x103

WM_SYSKEYDOWN 260 or 0x104

WM_SYSKEYUP 261 or 0x105

WM_SYSCHAR 262 or 0x106

WM_SYSDEADCHAR 263 or 0x107</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Lparam</ParamName>
              <ParamDescription>lparam argument from Windows processing; bitmask containing various pieces of information; dependent on specific message</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that has focus when the keystroke was made; this is the ID specified when the control was created in IPropertyManagerPage2::AddControl or IPropertyManagerPage2::IAddControl or IPropertyManagerPage2::AddGroupBox or IPropertyManagerPage2::IAddGroupBox.</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True indicates that the keystroke has been handled by the add-in and SOLIDWORKS should not continue to try to process it, false indicates that the keystroke has not been handled by the add-in and SOLIDWORKS will continue to try to process it</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnListboxRMBUp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when the right-mouse button is released in a list box on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the list box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>PosX</ParamName>
              <ParamDescription>X coordinate of the right-mouse button menu</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>PosY</ParamName>
              <ParamDescription>Y coordinate of the right-mouse button menu</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user changes the selected item in a list box or selection list box on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the list box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription>ID of the item</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnLostFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a control (edit box, combo box, list box, or number box) loses focus on this PropertyManager page.</Description>
          <Remark>&lt;p&gt;To handle selection box focus, use &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler9::OnSelectionboxFocusChanged&lt;/a&gt;.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the control that lost focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnNextPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the Next button on the PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the next page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user changes the value in the number box on a PropertyManager page.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;By default,&amp;nbsp;this method receives a notification every time the value&amp;nbsp;in the number box changes&amp;nbsp;while the slider is being dragged or spun.&amp;nbsp;Numerous notifications result in numerous calls to the handler, which is okay if your application responds quickly to each call. However, if&amp;nbsp;your application&amp;nbsp;responds slowly, then a performance bottleneck might occur. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Set&amp;nbsp;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageNumberbox~Style.html"&gt;IPropertyManagerPageNumberbox::Style&lt;/a&gt; to &lt;a href="ms-its:swconst.chm::/SOLIDWORKS.Interop.swconst~SOLIDWORKS.Interop.swconst.swPropMgrPageNumberBoxStyle_e.html"&gt;swPropMgrPageNumberBoxStyle_e.swPropMgrPageNumberBoxStyle_SupressNotifyWhileTracking&lt;/a&gt;&lt;font color="#000000"&gt; to receive only one notification while the&amp;nbsp;slider is being dragged or spun. &lt;/font&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~OnNumberBoxTrackingCompleted.html"&gt;IPropertyManagerPage2Handler9::OnNumberboxTrackingCompleted&lt;/a&gt; receives a notification when dragging or spinning of the slider is completed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the number box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value in the number box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnNumberBoxTrackingCompleted</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user finishes changing the value in the number box on a PropertyManager page.</Description>
          <Remark>This method receives a notification when dragging or spinning of the slider is completed.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the number box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value in the number box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user selects an option (radio button) on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of option</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnPopupMenuItem</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Determines which item was selected when the user selects a pop-up menu item.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnPopupMenuItemUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>When Windows attempts to select or deselect and enable or disable the pop-up menu item, SOLIDWORKS calls this method to get the state of the menu item from the add-in.</Description>
          <Remark>&lt;p&gt;This method: &lt;/p&gt;
&lt;ul style="MARGIN-RIGHT: 0px" dir="ltr"&gt;
&lt;li&gt;processes a request for the state of the specified pop-up menu item associated with the PropertyManager page. 
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiDescriptionText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;passes the state back to SOLIDWORKS.&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>Unique user-defined ID for a pop-up menu item (see IPropertyManagerPage2::AddMenuPopupItem) </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>retval</ParamName>
              <ParamDescription>State of the specified unique user-defined pop-up menu item:

0 - Not selected (i.e., not checked) and disabled (i.e., grayed out) 
1 - Not selected and enabled 

2 - Selected (i.e., checked) and disabled

3 - Selected and enabled</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnPreview</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the Preview button on a PropertyManager page.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;To show a Preview button on a PropertyManager page, include swPropertyManagerOptions_PreviewButton in the Options argument of &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~CreatePropertyManagerPage.html"&gt;ISldWorks::CreatePropertyManagerPage&lt;/a&gt;&amp;nbsp;or &lt;a href="ms-its:sldworksapi.chm::/Solidworks.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ICreatePropertyManagerPage.html"&gt;ISldWorks::ICreatePropertyManagerPage&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can do whatever you want in response to the Preview button being clicked. Your add-in is responsible for preview handling, including keeping track of the state of the Preview button. Your add-in controls what happens when the Preview button is clicked; SOLIDWORKS takes not action when the Preview button is clicked. SOLIDWORKS ignores the return value because by the time the callback handler is called, the button has already changed.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Remarks</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnPreviousPage</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the Back button on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the previous page displays successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnRedo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the Redo button on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnSelectionboxCalloutCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Performs some processing while the callout for this selection box is created.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can collect information using this method. For example, you can get the selection type from the last selection. Next, use the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt; property to get the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; object. Then, use the various ICallout properties to control the callout text and display characteristics based on that selection information.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is a pre-notification.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnSelectionboxCalloutDestroyed</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Performs some processing after the callout for this selection box is destroyed.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;only called if callouts have been enabled for the selection box as indicated by the Id argument. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~SetCalloutLabel.html"&gt;IPropertyManagerPageSelectionbox::SetCalloutLabel&lt;/a&gt; to enable callouts. &lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;a post-notification. The callout pointed to by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSelectionbox~Callout.html"&gt;IPropertyManagerPageSelectionbox::Callout&lt;/a&gt;&amp;nbsp;no longer exists, so do not make any calls to &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ICallout.html"&gt;ICallout&lt;/a&gt; methods.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Indicates that the active selection list box has changed.</Description>
          <Remark>A PropertyManager page often has more than one selection list. The focus is always on the active selection list. When the focus changes to another selection list,&amp;nbsp;this method is called. If there is only one selection list on the page, then the focus never leaves it and this method is never called.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box with focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user changes the selection list in a selection box on this PropertyManager page.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called when your application uses a selection method, such as &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~SelectByID2.html"&gt;IModelDocExtension::SelectByID2&lt;/a&gt;, just as if the selection was made interactively.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor a post-notification. The add-in should not be taking any action that may affect the model or the selection list. The add-in should only be querying information, presumably about the state of selections to set up its own information correctly.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Regardless of how many items the user selects, this method is called only once per interactive box selection. In other words, if the user selects six faces using a box selection, this method is called only once.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of this selection box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription>Number of items in this selection box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnSliderPositionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called whenever the user changes the position of a</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnSliderTrackingCompleted</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user finishes dragging a</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Although Value is declared as a double, the value of a slider is always a long. When this method is called, Value can be cast to a long.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageSlider~Style.html"&gt;IPropertyManagerPageSlider::Style&lt;/a&gt; is set to swPropMgrPageSliderStyle_NotifyWhileTracking, then you can use:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;IPropertyManagerPage2Handler9::OnSliderTrackingCompleted to receive one notification when dragging of the slider is completed.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler9~OnSliderPositionChanged.html"&gt;IPropertyManagerPage2Handler9::OnSliderPositionChanged&lt;/a&gt; to receive notifications every time the position of the slider changes because the slider is being dragged. &lt;span style="FONT-WEIGHT: bold"&gt;&lt;br&gt;&lt;br&gt;NOTE:&lt;/span&gt; This might result in numerous calls to the handler, which is fine if the add-in responds quickly to each call. However, if the add-in responds slowly, then a performance bottleneck might occur.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the slider control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value indicating the new position of the slider</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnSubmitSelection</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a selection is made, which allows the add-in to accept or reject the selection.</Description>
          <Remark>&lt;p&gt;If writing a macro, you must set this method to true for the user to select something (see the examples). If this method is not set to true, then the user cannot select anything. This method is set to false by default.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This method is called by SOLIDWORKS when an add-in has a PropertyManager page displayed and a selection is made that passes the selection filter criteria set up for a selection list box. The add-in can then:&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Take the Dispatch pointer and the selection type. &lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;QueryInterface the Dispatch pointer to get the specific interface. &lt;/div&gt;
&lt;/li&gt;&lt;li&gt;
&lt;div class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Use&amp;nbsp;methods or&amp;nbsp;properties&amp;nbsp;of that interface to determine if the selection should be allowed or not.&amp;nbsp;If the selection is:&lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/div&gt;
&lt;/li&gt;&lt;li style="LIST-STYLE-TYPE: none; DISPLAY: inline"&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&lt;span style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;accepted, return true, and processing continues normally.&lt;br&gt;&lt;br&gt;- or -&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;rejected, return false, and SOLIDWORKS does not accept the selection, just as if the selection did not pass the selection filter criteria of the selection list box. &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The add-in should not release the Dispatch pointer. SOLIDWORKS will release the Dispatch pointer upon return from this method.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The method is called during the process of SOLIDWORKS selection. It is neither a pre-notification nor post-notification. The add-in should not be taking any action that might affect the model or the selection list. The add-in should only be querying information and then returning true/VARIANT_TRUE or false/VARIANT_FALSE.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;ItemText is returned to SOLIDWORKS and stored on the selected object and can be used by your PropertyManager page selection list boxes for the life of that selection.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the active selection box, where this selection is being made</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Selection</ParamName>
              <ParamDescription>Object being selected</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelType</ParamName>
              <ParamDescription>Entity type of the selection as defined in swSelectType_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>ItemText</ParamName>
              <ParamDescription>Item for selection list box (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnTabClicked</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks a tab on a multi-tab PropertyManager page.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The value of Id is the ID that was specified when the tab was created by &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPage2~AddTab.html"&gt;IPropertyManagerPage2::AddTab&lt;/a&gt;.&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks a tab, control is passed to the add-in via this method. The add-in is expected to show or hide groups and controls intended to be visible or hidden on that tab. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;Your add-in is responsible for showing and hiding the controls on a tab to simulate moving between tabs, making it look like the tab is a container for the controls. However, tabs are not containers for the groups or controls. Tabs are controls that are displayed in a certain way, making them look like control containers. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the clicked tab (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user changes the string in a text box on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the text box</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>Text string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnUndo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the Undo button on this PropertyManager page.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnWhatsNew</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the What's New button on this PropertyManager page.</Description>
          <Remark>&lt;p&gt;Your add-in must implement this method. &lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When a user clicks the What's New button on this PropertyManager page, the appropriate What's New Help topic is displayed. Use &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISldWorks~ShowHelp.html"&gt;ISldWorks::ShowHelp&lt;/a&gt; to display the What's New Help topic. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler9~OnWindowFromHandleControlCreated</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when an attempt is made to create a .NET control on the PropertyManager page.</Description>
          <Remark>&lt;p style="MARGIN-BOTTOM: 0px"&gt;If the .NET control is not successfully created (i.e., Status = false), then the&amp;nbsp;program creating the PropertyManager page should receive notification from this handler. Return one of the following options in &lt;a href="ms-its:swconst.chm::/SOLIDWORKS.Interop.swconst~SOLIDWORKS.Interop.swconst.swHandleWindowFromHandleCreationFailure_e.html"&gt;swHandleWindowFromHandleCreationFailure_e&lt;/a&gt;:&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleWindowFromHandleCreationFailure_Cancel. Continue creating the PropertyManager page without the&amp;nbsp;.NET control. This is the default.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleWindowFromHandleCreationFailure_Retry. Try to create the .NET control again. You can&amp;nbsp;call the&amp;nbsp;&lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IPropertyManagerPageWindowFromHandle~SetWindowHandle.html"&gt;IPropertyManagerPageWindowFromHandle::SetWindowHandle&lt;/a&gt; method to change the&amp;nbsp;.NET control handle&amp;nbsp;to perhaps use another similar control or another version of the control and then return swHandleWindowFromHandleCreationFailure_Retry. Avoid an endless loop situation.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;swHandleWindowFromHandleCreationFailure_Continue. Cancel creating the&amp;nbsp;PropertyManager page. For example, it might be that the PropertyManager page is useless without the control, so the calling add-in might want to quit and handle the situation on its own.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="MARGIN-BOTTOM: 0px"&gt;If the control is created successfully, then SOLIDWORKS passes Status = true&amp;nbsp;to the add-in and nothing is returned. If the control fails to be created, SOLIDWORKS passes Status = false to the add-in and the handler returns swHandleWindowFromHandleCreationFailure_Continue.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription>ID of the .NET control</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Status</ParamName>
              <ParamDescription>True if the .NET control is successfully created, false if not</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>If Status equals:</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~AfterClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~AfterClose.html"&gt;IPropertyManagerPage2Handler5::AfterClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnButtonPress</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnButtonPress.html"&gt;IPropertyManagerPage2Handler5::OnButtonPress&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnCheckboxCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnCheckboxCheck.html"&gt;IPropertyManagerPage2Handler5::OnCheckboxCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnClose</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnClose.html"&gt;IPropertyManagerPage2Handler5::OnClose&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Reason</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnComboboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnComboboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnComboboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnGroupCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupCheck.html"&gt;IPropertyManagerPage2Handler5::OnGroupCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Checked</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnGroupExpand</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnGroupExpand.html"&gt;IPropertyManagerPage2Handler5::OnGroupExpand&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Expanded</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnHelp</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnHelp.html"&gt;IPropertyManagerPage2Handler5::OnHelp&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnListboxSelectionChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnListboxSelectionChanged.html"&gt;IPropertyManagerPage2Handler5::OnListboxSelectionChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Item</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnNumberboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnNumberboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnOptionCheck</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnNumberboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnOptionCheck&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnSelectionboxFocusChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxFocusChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionFocusChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnSelectionboxListChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnSelectionboxListChanged.html"&gt;IPropertyManagerPage2Handler5::OnSelectionListChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Count</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.IPropertyManagerPage2Handler~OnTextboxChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.IPropertyManagerPage2Handler5~OnTextboxChanged.html"&gt;IPropertyManagerPage2Handler5::OnTextboxChanged&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwAddin</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Allows applications to create SOLIDWORKS add-ins.</Description>
      <Remark>&lt;p&gt;To use this interface in a SOLIDWORKS&amp;nbsp;VB.NET or C#&amp;nbsp;macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C# Macros and Add-ins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are creating a COM-style addin and are using an MFC CCmdTarget-derived object to implement ISwAddin, you must fully implement ITypeInfo as follows:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-LEFT: 8px"&gt;In the declaration of your CCmdTarget-derived class, add:&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div style="LIST-STYLE-TYPE: disc; MARGIN-LEFT: 2em" type="disc"&gt;
&lt;ol style="LIST-STYLE-TYPE: decimal" type="1"&gt;
&lt;li class="kadov-p-Capicode"&gt;
&lt;p class="apicode"&gt;DECLARE_OLETYPELIB(&amp;lt;your CCmdTarget-derived class name&amp;gt;)&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-Capicode"&gt;
&lt;p class="apicode"&gt;__declspec( dllexport ) virtual BOOL GetDispatchIID(IID* pIID);&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p style="MARGIN-LEFT: 8px"&gt;In your implementation, add:&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div style="LIST-STYLE-TYPE: decimal; MARGIN-LEFT: 2em" type="1"&gt;
&lt;ol style="LIST-STYLE-TYPE: decimal" type="1"&gt;
&lt;li class="kadov-p-Capicode"&gt;
&lt;p class="apicode"&gt;IMPLEMENT_OLETYPELIB(&amp;lt;your class name&amp;gt;, LIBID_SldWorks_SWPublished, SOLIDWORKS_type_library_version, 0) &lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;//e.g., 14 for 2007&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-Capicode"&gt;
&lt;p class="apicode"&gt;&lt;span style="MARGIN-LEFT: 8px"&gt;BOOL auAm_c::GetDispatchIID(IID* pIID)&lt;br&gt;{&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
&lt;p class="apicode"&gt;&lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;*pIID == IID_ISwAddin;&lt;/p&gt;
&lt;p class="apicode"&gt;&lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;return True;&lt;/p&gt;
&lt;p class="apiCode" style="MARGIN-LEFT: 89px"&gt;}&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-Capicode"&gt;
&lt;p class="apicode"&gt;In your class constructor, add:&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiCode" style="MARGIN-LEFT: 48px"&gt;&lt;!--kadov_tag{{&lt;spaces&gt;}}--&gt;&amp;nbsp;&lt;!--kadov_tag{{&lt;/spaces&gt;}}--&gt;EnableTypeLib();&lt;/p&gt;
&lt;p&gt;See also &lt;a href="sldworksAPIProgGuide.chm::/OVERVIEW/Using_SwAddin_to_Create_a_SOLIDWORKS_Addin.htm"&gt;Using SwAddin to Create a SOLIDWORKS Add-in&lt;/a&gt;.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwAddin~ConnectToSW</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Calls this method when the add-in is loaded.</Description>
          <Remark>&lt;p class="apiRemarksText"&gt;When this method is called, add all required items for this add-in to the SOLIDWORKS user interface (for example, menus and toolbars) and set the event handler. &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>ThisSW</ParamName>
              <ParamDescription>Pointer to the SldWorks Dispatch object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Cookie</ParamName>
              <ParamDescription>Add-in ID</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the add-in connected successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwAddin~DisconnectFromSW</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Calls this method when SOLIDWORKS is about to be destroyed.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;This is a pre-notification. Add-ins should perform any clean up inside this event.&lt;/p&gt;
&lt;p class="apiDescriptionText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;When this method is called, remove and release all user-interface items related to this add-in (for example, menus, and toolbars). &lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the add-in disconnected successfully, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwAddinAdvancedOptionBroker</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Allows add-ins to add or remove dismissed messages on</Description>
      <Remark>To use this interface in a SOLIDWORKS VB.NET or C#&amp;nbsp;macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C#&amp;nbsp;Macros and Add-ins&lt;/a&gt;.</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwAddinAdvancedOptionBroker~GetMessageIDs</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Gets all of the dismissed message IDs and dismissed messages that currently appear on</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>IDs</ParamName>
              <ParamDescription>Array of dismissed message IDs</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Message</ParamName>
              <ParamDescription>Array of dismissed message strings</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwAddinAdvancedOptionBroker~SetMessageIDs</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Sets the IDs of the dismissed messages to display on</Description>
          <Remark>Before calling this method use &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwAddinAdvancedOptionBroker~GetMessageIDs.html"&gt;ISwAddinAdvancedOptionBroker::GetMessageIDs&lt;/a&gt; to obtain the current list of dismissed message IDs.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>IDs</ParamName>
              <ParamDescription>Array of IDs of dismissed messages to display</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwAddinBroker</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Gets information about an add-in's entities so that SOLIDWORKS can interact with those entities.</Description>
      <Remark>To use this interface in a SOLIDWORKS VB.NET or C#&amp;nbsp;macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C#&amp;nbsp;Macros and Add-ins&lt;/a&gt;.</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwAddinBroker~GetInferencePoints</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Gets one or more inference points from an add-in.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pDoc</ParamName>
              <ParamDescription>SOLIDWORKS document</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelPosX</ParamName>
              <ParamDescription>x coordinate in screen space</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>SelPosY</ParamName>
              <ParamDescription>y coordinate in screen space</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Tolerance</ParamName>
              <ParamDescription>Distance within model space that inference points can exist</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Option</ParamName>
              <ParamDescription>Options as defined in swPointInferenceBrokerOption_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>InferPoints</ParamName>
              <ParamDescription>Array of doubles; each inference point returns its x,y,z coordinates</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwAddinBroker~GetSelectedObjectsBBox</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Gets the selected entities bounding box from an add-in.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The order of the points follows the same convention as all SOLIDWORKS bounding boxes.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pDoc</ParamName>
              <ParamDescription>SOLIDWORKS document</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Option</ParamName>
              <ParamDescription>Option as defined in swAddinBrokerBBoxOption_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>BoxCorners</ParamName>
              <ParamDescription>Array of six doubles of the points of the bounding box</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwCalloutHandler</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Must be implemented by an add-in application to create</Description>
      <Remark>To use this interface in a SOLIDWORKS VB.NET or C# macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C#&amp;nbsp;Macros and Add-ins&lt;/a&gt;.</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwCalloutHandler~OnStringValueChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Allows access to and modifcation of text in a specific row in a callout.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>ICallout object whose text was edited</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>RowID</ParamName>
              <ParamDescription>Row in which the text was edi</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Text</ParamName>
              <ParamDescription>New text of RowID</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True to use updated text in RowID, false to use original text in RowID</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwColorContour</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwColorContour1.html"&gt;ISwColorContour1&lt;/a&gt;.</Description>
      <Remark>&lt;p&gt;This SwColorContour object and its methods let your implemented interface:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p"&gt;
&lt;p&gt;Render the model using colors that are application-defined at specific locations for criteria like temperature, thickness, stress, and so on.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p&gt;Display values associated with the colors at the cursor location.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;To use SwColorContour:&lt;/p&gt;
&lt;ol style="LIST-STYLE-TYPE: decimal" type="1"&gt;
&lt;li class="kadov-p"&gt;
&lt;p&gt;Implement the SOLIDWORKS SwColorContour interface.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p&gt;Install your implemented interface in the SOLIDWORKS software using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~InstallModelColorizer.html"&gt;IModelDocExtension::InstallModelColorizer&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p&gt;Remove your implemented interface from the SOLIDWORKS software using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~RemoveModelColorizer.html"&gt;IModelDocExtension::RemoveModelColorizer&lt;/a&gt; when you want to stop your implemented interface.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; Only one color and display interface can be active at any one time. The last color and display interface installed is the active one. If you remove that color and display interface, then the color and display interface installed before it becomes the active color and display interface.&lt;/p&gt;
&lt;p&gt;See SOLIDWORKS Help for details about SOLIDWORKS Curvature Display.&lt;/p&gt;
&lt;p&gt;To use this interface in a SOLIDWORKS VB.NET or C#&amp;nbsp;macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C# Macros and Add-ins&lt;/a&gt;.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour~Color</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwColorContour1~Color.html"&gt;ISwColorContour1::Color&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value that corresponds to the color</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour~DisplayString</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwColorContour1~DisplayString.html"&gt;ISwColorContour1::DisplayString&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value associated with the vertex for which to display the string</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>String to display for the value associated with the vertex</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour~NeedsUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwColorContour1~NeedsUpdate.html"&gt;ISwColorContour1::NeedsUpdate&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour~Value</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwColorContour1~Value.html"&gt;ISwColorContour1::Value&lt;/a&gt;.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>face</ParamName>
              <ParamDescription>Face on the model</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>vertexCoords</ParamName>
              <ParamDescription>Array of vertex coordinates (x, y, z) to which to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>normalCoords</ParamName>
              <ParamDescription>Array of normal coordinates (x, y, z) to which to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value defined by the add-in to display</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>COLORREF value that represents value</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwColorContour1</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Allows access to the color and display values of curvature in a SOLIDWORKS model.</Description>
      <Remark>&lt;p&gt;When implemented, the&amp;nbsp;methods of this interface allow you to assign colors and display values&amp;nbsp;of curvature&amp;nbsp;in a SOLIDWORKS model.&lt;/p&gt;
&lt;p&gt;To use ISwColorContour1:&lt;/p&gt;
&lt;ol style="LIST-STYLE-TYPE: decimal" type="1"&gt;
&lt;li class="kadov-p"&gt;
&lt;p&gt;Implement the ISwColorContour1 interface in an add-in class.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p&gt;Install the implemented interface in the SOLIDWORKS software using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~InstallModelColorizer.html"&gt;IModelDocExtension::InstallModelColorizer&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p&gt;Run the add-in and open a model document in SOLIDWORKS.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p&gt;In SOLIDWORKS select &lt;strong&gt;View &amp;gt; Display &amp;gt; Curvature.&lt;/strong&gt; The model is colorized by the implemented interface.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p"&gt;
&lt;p&gt;When you finalize the application, remove the implemented interface from the SOLIDWORKS software using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IModelDocExtension~RemoveModelColorizer.html"&gt;IModelDocExtension::RemoveModelColorizer&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;&lt;span style="FONT-WEIGHT: bold"&gt;NOTE:&lt;/span&gt; Only one color and display interface can be active at any one time. The last color and display interface installed is the active one. If you remove that color and display interface, then the color and display interface installed before it becomes the active color and display interface.&lt;/p&gt;
&lt;p&gt;This interface&amp;nbsp;overrides the color and display functionality&amp;nbsp;of the&amp;nbsp;SOLIDWORKS Curvature tool. See SOLIDWORKS Help for details about the SOLIDWORKS Curvature tool.&lt;/p&gt;
&lt;p&gt;To use this interface in a SOLIDWORKS VB.NET or C#&amp;nbsp;macro or add-in,&amp;nbsp;see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C# Macros and Add-ins&lt;/a&gt;.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour1~Color</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Gets the color for the specified location on the model.</Description>
          <Remark>When you implement this method, you&amp;nbsp;can return different colors for different locations of the model.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value that is associated with a location on the model (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour1~DisplayString</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Gets the string to display for the specified location on the model.</Description>
          <Remark>When you implement this method, you can return different strings for different locations of the model.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>Value that is associated with a location on the model (see Remarks)</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>String to display for the specified Value</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour1~NeedsUpdate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Specifies whether the SOLIDWORKS software refreshes the color and display.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwColorContour1~Value</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Gets the value that is associated with the specified location on the model.</Description>
          <Remark>&lt;p&gt;When you implement this method, you need&amp;nbsp;to populate the&amp;nbsp;Value output parameter. Value can be a function of the specified coordinates or the properties of the face. By default Value&amp;nbsp;is the input parameter&amp;nbsp;for&amp;nbsp;&lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwColorContour1~Color.html"&gt;ISwColorContour1::Color&lt;/a&gt; and &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwColorContour1~DisplayString.html"&gt;ISwColorContour1::DisplayString&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In VB.NET implementations, you need to change the name of the Value output parameter to avoid a compiler error. When you change the name,&amp;nbsp;use the same name for the&amp;nbsp;input parameters of your ISwColorContour1::Color and ISwColorContour1::DisplayString implementations.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>face</ParamName>
              <ParamDescription>Face to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>vertex_x</ParamName>
              <ParamDescription>X coordinate of vertex to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>vertex_y</ParamName>
              <ParamDescription>Y coordinate of vertex to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>vertex_z</ParamName>
              <ParamDescription>Z coordinate of vertex to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>normal_x</ParamName>
              <ParamDescription />
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>normal_y</ParamName>
              <ParamDescription>Y coordinate of normal to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>normal_z</ParamName>
              <ParamDescription>Z coordinate of normal to color</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription />
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwComFeature</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Allows applications to create macro features using COM.</Description>
      <Remark>&lt;p&gt;See &lt;a href="sldworksAPIProgGuide.chm::/Macro_Features/Exposed_COM_DLL_or_Executable.htm"&gt;Exposed COM DLL or Executable and Macro Features&lt;/a&gt; and &lt;a href="sldworksAPIProgGuide.chm::/Macro_Features/Overview_of_Macro_Features.htm"&gt;Overview of Macro Features&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;To use this interface in a SOLIDWORKS VB.NET or C# macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C#&amp;nbsp;Macros and Add-ins&lt;/a&gt;.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwComFeature~Edit</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Allows you to edit the definition of a macro feature created using COM.</Description>
          <Remark>This method is required. See &lt;a href="sldworksAPIProgGuide.chm::/Macro_Features/Exposed_COM_DLL_or_Executable.htm"&gt;Exposed COM DLL or Executable and Macro Features&lt;/a&gt; and &lt;a href="sldworksAPIProgGuide.chm::/Macro_Features/Overview_of_Macro_Features.htm"&gt;Overview of Macro Features&lt;/a&gt; for more information.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>app</ParamName>
              <ParamDescription>SOLIDWORKS application</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>modelDoc</ParamName>
              <ParamDescription>SOLIDWORKS document in which the macro feature appears</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>feature</ParamName>
              <ParamDescription>Macro feature whose definition you want to edit</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if editing the definition of the macro feature is successful, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwComFeature~Regenerate</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Allows you to rebuild a macro feature created using COM.</Description>
          <Remark>&lt;p&gt;This method is required.&lt;/p&gt;
&lt;p&gt;Examples of string return values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style="FONT-SIZE: 8pt" face="Verdana"&gt;VBA&lt;br&gt;&lt;/font&gt;&lt;font style="FONT-SIZE: 10pt" face="Courier New"&gt;swmRebuild = "Macro feature output error message"&lt;br&gt;&lt;/font&gt;&lt;font style="FONT-SIZE: 8pt" face="Verdana"&gt;&lt;br&gt;&lt;/font&gt;
&lt;/li&gt;&lt;li&gt;&lt;font style="FONT-SIZE: 8pt" face="Verdana"&gt;C++ COM&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;font style="FONT-SIZE: 10pt" face="Courier New"&gt;CComBSTR bMsg = _T("Macro feature output error message");&lt;br&gt;_variant_t vBSTRRet = bMsg;&lt;br&gt;*retval = vBSTRRet;&lt;br&gt;&lt;/font&gt;&lt;font style="FONT-SIZE: 8pt" face="Verdana"&gt;&lt;br&gt;&lt;/font&gt;
&lt;/li&gt;&lt;li&gt;&lt;font style="FONT-SIZE: 8pt" face="Verdana"&gt;C#&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;font style="FONT-SIZE: 10pt" face="Courier New"&gt;functionReturnValue = "Macro feature output error message";&lt;br&gt;return functionReturnValue;&lt;br&gt;&lt;/font&gt;&lt;font style="FONT-SIZE: 8pt" face="Verdana"&gt;&lt;br&gt;&lt;/font&gt;
&lt;/li&gt;&lt;li&gt;&lt;font style="FONT-SIZE: 8pt" face="Verdana"&gt;VB.NET&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;font style="FONT-SIZE: 10pt" face="Courier New"&gt;Regenerate = "Macro feature output error message"&lt;br&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;See &lt;a href="sldworksAPIProgGuide.chm::/Macro_Features/Exposed_COM_DLL_or_Executable.htm"&gt;Exposed COM DLL or Executable and Macro Features&lt;/a&gt; and &lt;a href="sldworksAPIProgGuide.chm::/Macro_Features/Overview_of_Macro_Features.htm"&gt;Overview of Macro Features&lt;/a&gt; for more information.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>app</ParamName>
              <ParamDescription>SOLIDWORKS application</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>modelDoc</ParamName>
              <ParamDescription>SOLIDWORKS document in which the macro appears</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>feature</ParamName>
              <ParamDescription>Macro feature that you want to rebuild</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Any one of the following values:</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwComFeature~Security</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Allows you to specify whether instances of the macro feature created using COM can be rolled back, edited, suppressed, replaced, or deleted from the model.</Description>
          <Remark>This method also allows you to display a note associated with the macro feature to the end user. This method is required for COM-based macro features. See &lt;a href="sldworksAPIProgGuide.chm::/Macro_Features/Overview_of_Macro_Features.htm"&gt;Overview of Macro Features&lt;/a&gt; for more information.</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>app</ParamName>
              <ParamDescription>SOLIDWORKS application</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>modelDoc</ParamName>
              <ParamDescription>SOLIDWORKS document in which the macro feature appears</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>feature</ParamName>
              <ParamDescription>Macro feature whose security you want to set</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>Value or combination of values as defined by swMacroFeatureSecurityOptions_e</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwManipulatorHandler</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwManipulatorHandler2.html"&gt;ISwManipulatorHandler2&lt;/a&gt;.</Description>
      <Remark />
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnDelete</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwManipulatorHandler2~OnDelete.html"&gt;ISwManipulatorHandler2::OnDelete&lt;/a&gt;</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnDirectionFlipped</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnDoubleValueChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnEndDrag</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnEndNoDrag</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnHandleRmbSelected</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnHandleSelected</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnItemSetFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnLmbSelected</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnStringValueChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Id</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler~OnUpdateDrag</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Obsolete. Superseded by</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>newPosMathPt</ParamName>
              <ParamDescription> </ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwManipulatorHandler2</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Must be implemented by an add-in application to interact with a</Description>
      <Remark>&lt;p&gt;To use this interface in a SOLIDWORKS VB.NET or C# macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C# Macros and Add-ins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The add-in application performs such actions as:&lt;/p&gt;
&lt;ul style="LIST-STYLE-TYPE: disc" type="disc"&gt;
&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText"&gt;Defining how a manipulator moves. For example, the add-in application has the manipulator follow a surface in order to place an image on that surface.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText"&gt;Providing any temporary graphics associated with manipulator. For example, to display a temporary body in a part, the add-in application must call &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IBody2~Display3.html"&gt;IBody2::Display3&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;&lt;li class="kadov-p-CapiRemarksText"&gt;
&lt;p class="apiRemarksText"&gt;Applying transforms using &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IBody2~ApplyTransform.html"&gt;IBody2::ApplyTransform&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p class="apiRemarksText"&gt;To create a manipulator, first create the SwManipulatorHandler2 object and then create the &lt;a href="ms-its:sldworksapi.chm::/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IManipulator.html"&gt;IManipulator&lt;/a&gt; object.&lt;/p&gt;
&lt;p class="apiRemarksText"&gt;See &lt;a href="sldworksAPIProgGuide.chm::/OVERVIEW/Manipulators.htm"&gt;Manipulators&lt;/a&gt;&amp;nbsp;for details.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnDelete</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when the SOLIDWORKS document is closed.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnDirectionFlipped</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Flips the direction of the manipulator.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnDoubleValueChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Indicates if the new value for the specified item is accepted or not.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;If the manipulator is a drag arrow manipulator, then the value is the length of the manipulator.&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>ID of the value to change</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>New value</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnEndDrag</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user releases a mouse button after dragging the pointer.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>



If the manipulator is a...

Then use...



Drag arrow

swDragArrowManipulatorOptions_e


Triad

swTriadManipulatorControlPoints_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnEndNoDrag</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user releases a mouse button and has not dragged the pointer.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>



If the manipulator is a...

Then use...



Drag arrow

swDragArrowManipulatorOptions_e


Triad

swTriadManipulatorControlPoints_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnHandleLmbSelected</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the left-mouse button.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription />
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnHandleRmbSelected</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when a user clicks the right-mouse button.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>



If the manipulator is a...

Then use...


Drag arrow

swDragArrowManipulatorOptions_e


Triad

swTriadManipulatorControlPoints_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnHandleSelected</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Gets the selected handle for this manipulator.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>Direction of the drag handle as defined by swDragArrowManipulatorOptions_e</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnItemSetFocus</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Sets the focus on the specified item.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>ID of item on which to set focus</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnStringValueChanged</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Indicates if the new value for the specified item is accepted or not.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>ID of the string value to change</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>Value</ParamName>
              <ParamDescription>New string value</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
          <ReturnValue>
            <ParamName>Return Value</ParamName>
            <ParamDescription>True if the add-in application accepts the new string value, false if not</ParamDescription>
          </ReturnValue>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwManipulatorHandler2~OnUpdateDrag</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Called when the pointer moves while the left-mouse or right-mouse button is held down.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>pManipulator</ParamName>
              <ParamDescription>IManipulator object</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>handleIndex</ParamName>
              <ParamDescription>



If the manipulator is a...

Then use...


Drag arrow

swDragArrowManipulatorOptions_e


Triad

swTriadManipulatorControlPoints_e</ParamDescription>
            </SolidWorksApiParameter>
            <SolidWorksApiParameter>
              <ParamName>newPosMathPt</ParamName>
              <ParamDescription>Math point indicating the pointer's new position</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwQuickTip</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Must be implemented by an add-in application to create Quick Tips for that add-in.</Description>
      <Remark>&lt;p&gt;See &lt;a href="sldworksAPIProgGuide.chm::/OVERVIEW/Quick_Tips_and_Bubble_ToolTips.htm"&gt;Quick Tips and Bubble ToolTips&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;To use this interface in a SOLIDWORKS VB.NET or C#&amp;nbsp;macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C# Macros and Add-ins&lt;/a&gt;.&lt;/p&gt;</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~AppState</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Sets the state of the add-in application.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>state</ParamName>
              <ParamDescription>State of the add-in as defined by the add-in</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~SwState</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Calls this method to advise your add-in of the current add-in state.</Description>
          <Remark>&lt;p class="apiRemarksText" style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;You can call this method to set the internal state of the Quick Tips portion of your add-in application. For example, you can call this method in response to a menu selection or toolbar button click. This may correspond to beginner, intermediate, or advanced modes. &lt;span style="MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px"&gt;The &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwQuickTip.html"&gt;ISwQuickTip&lt;/a&gt; object can then store the state and send a suitable URL when SOLIDWORKS calls &lt;a href="SOLIDWORKS.Interop.swpublished~SOLIDWORKS.Interop.swpublished.ISwQuickTip~Url.html"&gt;ISwQuickTip::Url&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;</Remark>
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <Param>
            <SolidWorksApiParameter>
              <ParamName>state</ParamName>
              <ParamDescription>State of SOLIDWORKS application:

swQuickTipNoMode      = 0x00000000 
swQuickTipEmptySWFrameMode    = 0x00000001 
swQuickTipEmptyPartMode     = 0x00000002 
swQuickTipSketchingMode     = 0x00000004 
swQuickTipClosedProfileCompletedMode = 0x00000008 
swQuickTipSketchDoneMode    = 0x00000010 
swQuickTipFirstFeatureDoneMode   = 0x00000020 
swQuickTipEmptyAssemblyMode    = 0x00000040 
swQuickTipAssemblyOneCompMode   = 0x00000080 
swQuickTipAssemblyMultiCompMode   = 0x00000100 
swQuickTipAssemblyMatedMode    = 0x00000200 
swQuickTipAssemblySimulatingMode  = 0x00000400 
swQuickTipEmptyDrawingMode    = 0x00000800 
swQuickTipDrawingOneViewMode   = 0x00001000 
swQuickTipPMBaseFeatureDialogMode  = 0x00002000 
swQuickTipPMYellowErrorMessageMode  = 0x00004000 // Display this topic for error conditions when the yellow group box in a PropertyManager is displayed instructing the user to do something before he or she can continue.  
swQuickTipPMMateDialogMode    = 0x00008000 
swQuickTipSheetMetalMode    = 0x00010000 
swQuickTipSketching3DMode    = 0x00020000 
swQuickTipDrawingEditSheetMode   = 0x00040000 
swQuickTipPMInsertModelViewMode   = 0x00080000 
swQuickTipPMInsertProjectedViewMode  = 0x00100000 
swQuickTipPMInsertComponentMode   = 0x00200000 
swQuickTipPMYellowGuidelinesMode  = 0x00400000  // Display this topic if you want Quick Tips to know about the yellow group box in a PropertyManager that is displayed instructing the user to do something before he or she can continue.</ParamDescription>
            </SolidWorksApiParameter>
          </Param>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties>
        <SolidWorksApiPropertyModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~ApplicationName</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <PropertyValue>Gets the name of add-in application.</PropertyValue>
        </SolidWorksApiPropertyModel>
        <SolidWorksApiPropertyModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~HideGuide</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <PropertyValue>Gets the state of the add-in's Quick Tips.</PropertyValue>
        </SolidWorksApiPropertyModel>
        <SolidWorksApiPropertyModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~MenuName</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <PropertyValue>Gets the name of add-in's Quick Tips on the SOLIDWORKS Help menu.</PropertyValue>
        </SolidWorksApiPropertyModel>
        <SolidWorksApiPropertyModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~ShowInAssemblyDoc</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <PropertyValue>Gets whether to show an add-in's Quick Tips in SOLIDWORKS assembly documents.</PropertyValue>
        </SolidWorksApiPropertyModel>
        <SolidWorksApiPropertyModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~ShowInDrawingDoc</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <PropertyValue>Gets whether to show an add-in's</PropertyValue>
        </SolidWorksApiPropertyModel>
        <SolidWorksApiPropertyModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~ShowInPartDoc</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <PropertyValue>Gets whether to show the add-in's Quick Tips in SOLIDWORKS part documents.</PropertyValue>
        </SolidWorksApiPropertyModel>
        <SolidWorksApiPropertyModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwQuickTip~Url</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
          <PropertyValue>Gets the URL of the HMTL page to display in the add-in's Quick Tips.</PropertyValue>
        </SolidWorksApiPropertyModel>
      </Properties>
    </SolidWorksInterfaceModel>
    <SolidWorksInterfaceModel>
      <Name>SolidWorks.Interop.swpublished.ISwUndoAPIHandler</Name>
      <Version>2018</Version>
      <IsObsolete>false</IsObsolete>
      <Description>Undo an add-in application's previously processed commands.</Description>
      <Remark>To use this interface in a SOLIDWORKS VB.NET or C#&amp;nbsp;macro or add-in, see &lt;a href="sldworksapiprogguide.chm::/OVERVIEW/ComVisibleAttribute_in_VSTA_macros.htm"&gt;ComVisibleAttribute in VB.NET and C#&amp;nbsp;Macros and Add-ins&lt;/a&gt;.</Remark>
      <Methods>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwUndoAPIHandler~DoUndo</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Undoes an add-in application's previously processed commands when an end-user selects its undo command on the SOLIDWORKS undo list or it is called in a macro.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
        <SolidWorksApiMethodModel>
          <Name>SolidWorks.Interop.swpublished~SolidWorks.Interop.swpublished.ISwUndoAPIHandler~UndoReSet</Name>
          <Version>2018</Version>
          <IsObsolete>false</IsObsolete>
          <Description>Resets (clears) the add-in application's undo list after processing the add-in application's undo command and lets an add-in application know that its undo list has been reset.</Description>
          <Remark />
          <ApiAvailability>
            <AvailabiltyStr />
          </ApiAvailability>
        </SolidWorksApiMethodModel>
      </Methods>
      <Properties />
    </SolidWorksInterfaceModel>
  </InterfaceModels>
  <DelegateModels />
  <EnumModels />
</SolidWorksNameSpace>